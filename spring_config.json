{
    "base_url": "https://start.spring.io/starter.zip?type=maven-project&language=java&bootVersion={ver}&baseDir=demo&groupId=com.example&artifactId=demo&name=demo&description=Demo+project+for+Spring+Boot&packageName=com.example.demo&packaging=jar&javaVersion=1.8&autocomplete=&generate-project={pkg}",
    "dependencies": [
        {
            "1.5.10.RELEASE": {
                "core": [
                    {
                        "id": "devtools",
                        "name": "DevTools",
                        "group": "Core",
                        "description": "Spring Boot Development Tools",
                        "tag": "core"
                    },
                    {
                        "id": "security",
                        "name": "Security",
                        "group": "Core",
                        "description": "Secure your application via spring-security",
                        "weight": 100,
                        "tag": "core"
                    },
                    {
                        "id": "lombok",
                        "name": "Lombok",
                        "group": "Core",
                        "description": "Java annotation library which helps to reduce boilerplate code and code faster",
                        "tag": "core"
                    },
                    {
                        "id": "configuration-processor",
                        "name": "Configuration Processor",
                        "group": "Core",
                        "description": "Generate metadata for your custom configuration keys",
                        "tag": "core"
                    },
                    {
                        "id": "session",
                        "name": "Session",
                        "group": "Core",
                        "description": "API and implementations for managing a user\u2019s session information",
                        "tag": "core"
                    },
                    {
                        "id": "cache",
                        "name": "Cache",
                        "group": "Core",
                        "description": "Spring's Cache abstraction",
                        "tag": "core"
                    },
                    {
                        "id": "validation",
                        "name": "Validation",
                        "group": "Core",
                        "description": "JSR-303 validation infrastructure (already included with web)",
                        "tag": "core"
                    },
                    {
                        "id": "retry",
                        "name": "Retry",
                        "group": "Core",
                        "description": "Provide declarative retry support via spring-retry",
                        "tag": "core"
                    },
                    {
                        "id": "jta-atomikos",
                        "name": "JTA (Atomikos)",
                        "group": "Core",
                        "description": "JTA distributed transactions via Atomikos",
                        "tag": "core"
                    },
                    {
                        "id": "jta-bitronix",
                        "name": "JTA (Bitronix)",
                        "group": "Core",
                        "description": "JTA distributed transactions via Bitronix",
                        "tag": "core"
                    },
                    {
                        "id": "jta-narayana",
                        "name": "JTA (Narayana)",
                        "group": "Core",
                        "description": "JTA distributed transactions via Narayana",
                        "tag": "core"
                    },
                    {
                        "id": "aop",
                        "name": "Aspects",
                        "group": "Core",
                        "description": "Create your own Aspects using Spring AOP and AspectJ",
                        "tag": "core"
                    }
                ],
                "web": [
                    {
                        "id": "web",
                        "name": "Web",
                        "group": "Web",
                        "description": "Full-stack web development with Tomcat and Spring MVC",
                        "weight": 100,
                        "tag": "web"
                    },
                    {
                        "id": "data-rest",
                        "name": "Rest Repositories",
                        "group": "Web",
                        "description": "Exposing Spring Data repositories over REST via spring-data-rest-webmvc",
                        "weight": 10,
                        "tag": "web"
                    },
                    {
                        "id": "data-rest-hal",
                        "name": "Rest Repositories HAL Browser",
                        "group": "Web",
                        "description": "Browsing Spring Data REST repositories in your browser",
                        "tag": "web"
                    },
                    {
                        "id": "hateoas",
                        "name": "HATEOAS",
                        "group": "Web",
                        "description": "HATEOAS-based RESTful services",
                        "tag": "web"
                    },
                    {
                        "id": "web-services",
                        "name": "Web Services",
                        "group": "Web",
                        "description": "Contract-first SOAP service development with Spring Web Services",
                        "keywords": "ws",
                        "tag": "web"
                    },
                    {
                        "id": "jersey",
                        "name": "Jersey (JAX-RS)",
                        "group": "Web",
                        "description": "RESTful Web Services framework with support of JAX-RS",
                        "tag": "web"
                    },
                    {
                        "id": "websocket",
                        "name": "Websocket",
                        "group": "Web",
                        "description": "Websocket development with SockJS and STOMP",
                        "tag": "web"
                    },
                    {
                        "id": "restdocs",
                        "name": "REST Docs",
                        "group": "Web",
                        "description": "Document RESTful services by combining hand-written and auto-generated documentation",
                        "tag": "web"
                    },
                    {
                        "id": "vaadin",
                        "name": "Vaadin",
                        "group": "Web",
                        "description": "Vaadin java web application framework",
                        "tag": "web"
                    },
                    {
                        "id": "cxf-jaxrs",
                        "name": "Apache CXF (JAX-RS)",
                        "group": "Web",
                        "description": "RESTful Web Services framework with support of JAX-RS",
                        "tag": "web"
                    },
                    {
                        "id": "ratpack",
                        "name": "Ratpack",
                        "group": "Web",
                        "description": "Spring Boot integration for the Ratpack framework",
                        "tag": "web"
                    },
                    {
                        "id": "mobile",
                        "name": "Mobile",
                        "group": "Web",
                        "description": "Simplify the development of mobile web applications with spring-mobile",
                        "tag": "web"
                    },
                    {
                        "id": "keycloak",
                        "name": "Keycloak",
                        "group": "Web",
                        "description": "Keycloak integration, an open source Identity and Access Management solution.",
                        "tag": "web"
                    }
                ],
                "template engines": [
                    {
                        "id": "thymeleaf",
                        "name": "Thymeleaf",
                        "group": "Template Engines",
                        "description": "Thymeleaf templating engine, including integration with Spring",
                        "weight": 90,
                        "keywords": "template",
                        "tag": "template engines"
                    },
                    {
                        "id": "freemarker",
                        "name": "Freemarker",
                        "group": "Template Engines",
                        "description": "FreeMarker templating engine",
                        "keywords": "template",
                        "tag": "template engines"
                    },
                    {
                        "id": "mustache",
                        "name": "Mustache",
                        "group": "Template Engines",
                        "description": "Mustache templating engine",
                        "keywords": "template",
                        "tag": "template engines"
                    },
                    {
                        "id": "groovy-templates",
                        "name": "Groovy Templates",
                        "group": "Template Engines",
                        "description": "Groovy templating engine",
                        "tag": "template engines"
                    }
                ],
                "sql": [
                    {
                        "id": "data-jpa",
                        "name": "JPA",
                        "group": "SQL",
                        "description": "Java Persistence API including spring-data-jpa, spring-orm and Hibernate",
                        "weight": 100,
                        "keywords": "jpa",
                        "tag": "sql"
                    },
                    {
                        "id": "mysql",
                        "name": "MySQL",
                        "group": "SQL",
                        "description": "MySQL jdbc driver",
                        "tag": "sql"
                    },
                    {
                        "id": "h2",
                        "name": "H2",
                        "group": "SQL",
                        "description": "H2 database (with embedded support)",
                        "tag": "sql"
                    },
                    {
                        "id": "jdbc",
                        "name": "JDBC",
                        "group": "SQL",
                        "description": "JDBC databases",
                        "tag": "sql"
                    },
                    {
                        "id": "mybatis",
                        "name": "MyBatis",
                        "group": "SQL",
                        "description": "Persistence support using MyBatis",
                        "tag": "sql"
                    },
                    {
                        "id": "postgresql",
                        "name": "PostgreSQL",
                        "group": "SQL",
                        "description": "PostgreSQL jdbc driver",
                        "tag": "sql"
                    },
                    {
                        "id": "sqlserver",
                        "name": "SQL Server",
                        "group": "SQL",
                        "description": "Microsoft SQL Server jdbc driver",
                        "tag": "sql"
                    },
                    {
                        "id": "hsql",
                        "name": "HSQLDB",
                        "group": "SQL",
                        "description": "HSQLDB database (with embedded support)",
                        "tag": "sql"
                    },
                    {
                        "id": "derby",
                        "name": "Apache Derby",
                        "group": "SQL",
                        "description": "Apache Derby database (with embedded support)",
                        "tag": "sql"
                    },
                    {
                        "id": "liquibase",
                        "name": "Liquibase",
                        "group": "SQL",
                        "description": "Liquibase Database Migrations library",
                        "tag": "sql"
                    },
                    {
                        "id": "flyway",
                        "name": "Flyway",
                        "group": "SQL",
                        "description": "Flyway Database Migrations library",
                        "tag": "sql"
                    },
                    {
                        "id": "jooq",
                        "name": "JOOQ",
                        "group": "SQL",
                        "description": "Persistence support using Java Object Oriented Querying",
                        "tag": "sql"
                    }
                ],
                "nosql": [
                    {
                        "id": "data-redis",
                        "name": "Redis",
                        "group": "NoSQL",
                        "description": "Redis key-value data store, including spring-data-redis",
                        "keywords": "redis",
                        "tag": "nosql"
                    },
                    {
                        "id": "data-mongodb",
                        "name": "MongoDB",
                        "group": "NoSQL",
                        "description": "MongoDB NoSQL Database, including spring-data-mongodb",
                        "weight": 50,
                        "tag": "nosql"
                    },
                    {
                        "id": "flapdoodle-mongo",
                        "name": "Embedded MongoDB",
                        "group": "NoSQL",
                        "description": "Embedded MongoDB for testing",
                        "tag": "nosql"
                    },
                    {
                        "id": "data-elasticsearch",
                        "name": "Elasticsearch",
                        "group": "NoSQL",
                        "description": "Elasticsearch search and analytics engine including spring-data-elasticsearch",
                        "weight": 10,
                        "tag": "nosql"
                    },
                    {
                        "id": "data-solr",
                        "name": "Solr",
                        "group": "NoSQL",
                        "description": "Apache Solr search platform, including spring-data-solr",
                        "tag": "nosql"
                    },
                    {
                        "id": "data-cassandra",
                        "name": "Cassandra",
                        "group": "NoSQL",
                        "description": "Cassandra NoSQL Database, including spring-data-cassandra",
                        "tag": "nosql"
                    },
                    {
                        "id": "data-couchbase",
                        "name": "Couchbase",
                        "group": "NoSQL",
                        "description": "Couchbase NoSQL database, including spring-data-couchbase",
                        "tag": "nosql"
                    },
                    {
                        "id": "data-neo4j",
                        "name": "Neo4j",
                        "group": "NoSQL",
                        "description": "Neo4j NoSQL graph database, including spring-data-neo4j",
                        "tag": "nosql"
                    },
                    {
                        "id": "data-gemfire",
                        "name": "Gemfire",
                        "group": "NoSQL",
                        "description": "GemFire distributed data store including spring-data-gemfire",
                        "tag": "nosql"
                    }
                ],
                "messaging": [
                    {
                        "id": "amqp",
                        "name": "RabbitMQ",
                        "group": "Messaging",
                        "description": "Advanced Message Queuing Protocol via spring-rabbit",
                        "weight": 100,
                        "keywords": "messaging",
                        "tag": "messaging"
                    },
                    {
                        "id": "kafka",
                        "name": "Kafka",
                        "group": "Messaging",
                        "description": "Kafka messaging support using Spring Kafka",
                        "weight": 100,
                        "keywords": "messaging",
                        "tag": "messaging"
                    },
                    {
                        "id": "activemq",
                        "name": "JMS (ActiveMQ)",
                        "group": "Messaging",
                        "description": "Java Message Service API via Apache ActiveMQ",
                        "tag": "messaging"
                    },
                    {
                        "id": "artemis",
                        "name": "JMS (Artemis)",
                        "group": "Messaging",
                        "description": "Java Message Service API via Apache Artemis",
                        "tag": "messaging"
                    }
                ],
                "cloud core": [
                    {
                        "id": "cloud-connectors",
                        "name": "Cloud Connectors",
                        "group": "Cloud Core",
                        "description": "Simplifies connecting to services in cloud platforms, including spring-cloud-connector and spring-cloud-cloudfoundry-connector",
                        "tag": "cloud core"
                    },
                    {
                        "id": "cloud-starter",
                        "name": "Cloud Bootstrap",
                        "group": "Cloud Core",
                        "description": "spring-cloud-context (e.g. Bootstrap context and @RefreshScope)",
                        "weight": 100,
                        "tag": "cloud core"
                    },
                    {
                        "id": "cloud-security",
                        "name": "Cloud Security",
                        "group": "Cloud Core",
                        "description": "Secure load balancing and routing with spring-cloud-security",
                        "tag": "cloud core"
                    },
                    {
                        "id": "cloud-oauth2",
                        "name": "Cloud OAuth2",
                        "group": "Cloud Core",
                        "description": "OAuth2 and distributed application patterns with spring-cloud-security",
                        "tag": "cloud core"
                    },
                    {
                        "id": "cloud-task",
                        "name": "Cloud Task",
                        "group": "Cloud Core",
                        "description": "Task result tracking and integration with Spring Batch",
                        "tag": "cloud core"
                    }
                ],
                "cloud config": [
                    {
                        "id": "cloud-config-client",
                        "name": "Config Client",
                        "group": "Cloud Config",
                        "description": "spring-cloud-config Client",
                        "weight": 100,
                        "tag": "cloud config"
                    },
                    {
                        "id": "cloud-config-server",
                        "name": "Config Server",
                        "group": "Cloud Config",
                        "description": "Central management for configuration via a git or svn backend",
                        "tag": "cloud config"
                    },
                    {
                        "id": "cloud-starter-vault-config",
                        "name": "Vault Configuration",
                        "group": "Cloud Config",
                        "description": "Configuration management with HashiCorp Vault",
                        "tag": "cloud config"
                    },
                    {
                        "id": "cloud-starter-zookeeper-config",
                        "name": "Zookeeper Configuration",
                        "group": "Cloud Config",
                        "description": "Configuration management with Zookeeper and spring-cloud-zookeeper-config",
                        "tag": "cloud config"
                    },
                    {
                        "id": "cloud-starter-consul-config",
                        "name": "Consul Configuration",
                        "group": "Cloud Config",
                        "description": "Configuration management with Hashicorp Consul",
                        "tag": "cloud config"
                    }
                ],
                "cloud discovery": [
                    {
                        "id": "cloud-eureka",
                        "name": "Eureka Discovery",
                        "group": "Cloud Discovery",
                        "description": "Service discovery using spring-cloud-netflix and Eureka",
                        "weight": 100,
                        "tag": "cloud discovery"
                    },
                    {
                        "id": "cloud-eureka-server",
                        "name": "Eureka Server",
                        "group": "Cloud Discovery",
                        "description": "spring-cloud-netflix Eureka Server",
                        "tag": "cloud discovery"
                    },
                    {
                        "id": "cloud-starter-zookeeper-discovery",
                        "name": "Zookeeper Discovery",
                        "group": "Cloud Discovery",
                        "description": "Service discovery with Zookeeper and spring-cloud-zookeeper-discovery",
                        "tag": "cloud discovery"
                    },
                    {
                        "id": "cloud-cloudfoundry-discovery",
                        "name": "Cloud Foundry Discovery",
                        "group": "Cloud Discovery",
                        "description": "Service discovery with Cloud Foundry",
                        "tag": "cloud discovery"
                    },
                    {
                        "id": "cloud-starter-consul-discovery",
                        "name": "Consul Discovery",
                        "group": "Cloud Discovery",
                        "description": "Service discovery with Hashicorp Consul",
                        "tag": "cloud discovery"
                    }
                ],
                "cloud routing": [
                    {
                        "id": "cloud-zuul",
                        "name": "Zuul",
                        "group": "Cloud Routing",
                        "description": "Intelligent and programmable routing with spring-cloud-netflix Zuul",
                        "tag": "cloud routing"
                    },
                    {
                        "id": "cloud-ribbon",
                        "name": "Ribbon",
                        "group": "Cloud Routing",
                        "description": "Client side load balancing with spring-cloud-netflix and Ribbon",
                        "tag": "cloud routing"
                    },
                    {
                        "id": "cloud-feign",
                        "name": "Feign",
                        "group": "Cloud Routing",
                        "description": "Declarative REST clients with spring-cloud-netflix Feign",
                        "tag": "cloud routing"
                    }
                ],
                "cloud circuit breaker": [
                    {
                        "id": "cloud-hystrix",
                        "name": "Hystrix",
                        "group": "Cloud Circuit Breaker",
                        "description": "Circuit breaker with spring-cloud-netflix Hystrix",
                        "tag": "cloud circuit breaker"
                    },
                    {
                        "id": "cloud-hystrix-dashboard",
                        "name": "Hystrix Dashboard",
                        "group": "Cloud Circuit Breaker",
                        "description": "Circuit breaker dashboard with spring-cloud-netflix Hystrix",
                        "tag": "cloud circuit breaker"
                    },
                    {
                        "id": "cloud-turbine",
                        "name": "Turbine",
                        "group": "Cloud Circuit Breaker",
                        "description": "Circuit breaker metric aggregation using spring-cloud-netflix with Turbine and server-sent events",
                        "tag": "cloud circuit breaker"
                    },
                    {
                        "id": "cloud-turbine-stream",
                        "name": "Turbine Stream",
                        "group": "Cloud Circuit Breaker",
                        "description": "Circuit breaker metric aggregation using spring-cloud-netflix with Turbine and Spring Cloud Stream (requires a binder, e.g. Kafka or RabbitMQ)",
                        "tag": "cloud circuit breaker"
                    }
                ],
                "cloud tracing": [
                    {
                        "id": "cloud-starter-sleuth",
                        "name": "Sleuth",
                        "group": "Cloud Tracing",
                        "description": "Distributed tracing via logs with spring-cloud-sleuth",
                        "tag": "cloud tracing"
                    },
                    {
                        "id": "cloud-starter-zipkin",
                        "name": "Zipkin Client",
                        "group": "Cloud Tracing",
                        "description": "Distributed tracing with an existing Zipkin installation and spring-cloud-sleuth-zipkin. Alternatively, consider Sleuth Stream.",
                        "tag": "cloud tracing"
                    }
                ],
                "cloud messaging": [
                    {
                        "id": "cloud-bus",
                        "name": "Cloud Bus",
                        "group": "Cloud Messaging",
                        "description": "A simple control bus using Spring Cloud Stream (requires a binder, e.g. Kafka or RabbitMQ)",
                        "tag": "cloud messaging"
                    },
                    {
                        "id": "cloud-stream",
                        "name": "Cloud Stream",
                        "group": "Cloud Messaging",
                        "description": "Messaging microservices with Spring Cloud Stream (requires a binder, e.g. Kafka or RabbitMQ)",
                        "weight": 90,
                        "tag": "cloud messaging"
                    }
                ],
                "cloud aws": [
                    {
                        "id": "cloud-aws",
                        "name": "AWS Core",
                        "group": "Cloud AWS",
                        "description": "AWS native services from spring-cloud-aws",
                        "tag": "cloud aws"
                    },
                    {
                        "id": "cloud-aws-jdbc",
                        "name": "AWS JDBC",
                        "group": "Cloud AWS",
                        "description": "Relational databases on AWS with RDS and spring-cloud-aws-jdbc",
                        "tag": "cloud aws"
                    },
                    {
                        "id": "cloud-aws-messaging",
                        "name": "AWS Messaging",
                        "group": "Cloud AWS",
                        "description": "Messaging on AWS with SQS and spring-cloud-aws-messaging",
                        "tag": "cloud aws"
                    }
                ],
                "cloud contract": [
                    {
                        "id": "cloud-contract-verifier",
                        "name": "Cloud Contract Verifier",
                        "group": "Cloud Contract",
                        "description": "Test dependencies required for autogenerated tests",
                        "tag": "cloud contract"
                    },
                    {
                        "id": "cloud-contract-stub-runner",
                        "name": "Cloud Contract Stub Runner",
                        "group": "Cloud Contract",
                        "description": "Stub Runner for HTTP/Messaging based communication",
                        "tag": "cloud contract"
                    },
                    {
                        "id": "cloud-contract-wiremock",
                        "name": "Cloud Contract WireMock",
                        "group": "Cloud Contract",
                        "description": "Test dependencies required for the WireMock HTTP server",
                        "tag": "cloud contract"
                    }
                ],
                "pivotal cloud foundry": [
                    {
                        "id": "scs-config-client",
                        "name": "Config Client (PCF)",
                        "group": "Pivotal Cloud Foundry",
                        "description": "Config client on Pivotal Cloud Foundry",
                        "tag": "pivotal cloud foundry"
                    },
                    {
                        "id": "scs-service-registry",
                        "name": "Service Registry (PCF)",
                        "group": "Pivotal Cloud Foundry",
                        "description": "Eureka service discovery on Pivotal Cloud Foundry",
                        "tag": "pivotal cloud foundry"
                    },
                    {
                        "id": "scs-circuit-breaker",
                        "name": "Circuit Breaker (PCF)",
                        "group": "Pivotal Cloud Foundry",
                        "description": "Hystrix circuit breaker on Pivotal Cloud Foundry",
                        "tag": "pivotal cloud foundry"
                    }
                ],
                "azure": [
                    {
                        "id": "azure-support",
                        "name": "Azure Support",
                        "group": "Azure",
                        "description": "Auto-configuration for Azure Services (service bus, storage, active directory, cosmos DB, key vault and more)",
                        "tag": "azure"
                    },
                    {
                        "id": "azure-active-directory",
                        "name": "Azure Active Directory",
                        "group": "Azure",
                        "description": "Spring Security integration with Azure Active Directory for authentication",
                        "tag": "azure"
                    },
                    {
                        "id": "azure-keyvault-secrets",
                        "name": "Azure Key Vault",
                        "group": "Azure",
                        "description": "Spring value annotation integration with Azure Key Vault Secrets",
                        "tag": "azure"
                    },
                    {
                        "id": "azure-storage",
                        "name": "Azure Storage",
                        "group": "Azure",
                        "description": "Azure Storage service integration",
                        "tag": "azure"
                    }
                ],
                "social": [
                    {
                        "id": "social-facebook",
                        "name": "Facebook",
                        "group": "Social",
                        "description": "spring-social-facebook",
                        "weight": 25,
                        "tag": "social"
                    },
                    {
                        "id": "social-linkedin",
                        "name": "LinkedIn",
                        "group": "Social",
                        "description": "spring-social-linkedin",
                        "tag": "social"
                    },
                    {
                        "id": "social-twitter",
                        "name": "Twitter",
                        "group": "Social",
                        "description": "spring-social-twitter",
                        "tag": "social"
                    }
                ],
                "i/o": [
                    {
                        "id": "batch",
                        "name": "Batch",
                        "group": "I/O",
                        "description": "Spring Batch support",
                        "weight": 100,
                        "tag": "i/o"
                    },
                    {
                        "id": "integration",
                        "name": "Integration",
                        "group": "I/O",
                        "description": "Common spring-integration modules",
                        "weight": 100,
                        "tag": "i/o"
                    },
                    {
                        "id": "mail",
                        "name": "Mail",
                        "group": "I/O",
                        "description": "javax.mail",
                        "tag": "i/o"
                    },
                    {
                        "id": "camel",
                        "name": "Apache Camel",
                        "group": "I/O",
                        "description": "Integration using Apache Camel",
                        "tag": "i/o"
                    },
                    {
                        "id": "data-ldap",
                        "name": "LDAP",
                        "group": "I/O",
                        "description": "LDAP support, including spring-data-ldap",
                        "tag": "i/o"
                    },
                    {
                        "id": "activiti-basic",
                        "name": "Activiti",
                        "group": "I/O",
                        "description": "Activiti BPMN workflow engine",
                        "tag": "i/o"
                    },
                    {
                        "id": "spring-shell",
                        "name": "Spring Shell",
                        "group": "I/O",
                        "description": "Build shell-based clients",
                        "tag": "i/o"
                    }
                ],
                "ops": [
                    {
                        "id": "actuator",
                        "name": "Actuator",
                        "group": "Ops",
                        "description": "Production ready features to help you monitor and manage your application",
                        "tag": "ops"
                    },
                    {
                        "id": "codecentric-spring-boot-admin-server",
                        "name": "Spring Boot Admin (Server)",
                        "group": "Ops",
                        "description": "An admin interface for Spring Boot applications",
                        "tag": "ops"
                    },
                    {
                        "id": "codecentric-spring-boot-admin-client",
                        "name": "Spring Boot Admin (Client)",
                        "group": "Ops",
                        "description": "Register your application with a Spring Boot Admin instance",
                        "tag": "ops"
                    },
                    {
                        "id": "actuator-docs",
                        "name": "Actuator Docs",
                        "group": "Ops",
                        "description": "API documentation for the Actuator endpoints",
                        "tag": "ops"
                    }
                ]
            }
        },
        {
            "1.4.7.RELEASE": {
                "core": [
                    {
                        "id": "devtools",
                        "name": "DevTools",
                        "group": "Core",
                        "description": "Spring Boot Development Tools",
                        "tag": "core"
                    },
                    {
                        "id": "security",
                        "name": "Security",
                        "group": "Core",
                        "description": "Secure your application via spring-security",
                        "weight": 100,
                        "tag": "core"
                    },
                    {
                        "id": "lombok",
                        "name": "Lombok",
                        "group": "Core",
                        "description": "Java annotation library which helps to reduce boilerplate code and code faster",
                        "tag": "core"
                    },
                    {
                        "id": "configuration-processor",
                        "name": "Configuration Processor",
                        "group": "Core",
                        "description": "Generate metadata for your custom configuration keys",
                        "tag": "core"
                    },
                    {
                        "id": "session",
                        "name": "Session",
                        "group": "Core",
                        "description": "API and implementations for managing a user\u2019s session information",
                        "tag": "core"
                    },
                    {
                        "id": "cache",
                        "name": "Cache",
                        "group": "Core",
                        "description": "Spring's Cache abstraction",
                        "tag": "core"
                    },
                    {
                        "id": "validation",
                        "name": "Validation",
                        "group": "Core",
                        "description": "JSR-303 validation infrastructure (already included with web)",
                        "tag": "core"
                    },
                    {
                        "id": "retry",
                        "name": "Retry",
                        "group": "Core",
                        "description": "Provide declarative retry support via spring-retry",
                        "tag": "core"
                    },
                    {
                        "id": "jta-atomikos",
                        "name": "JTA (Atomikos)",
                        "group": "Core",
                        "description": "JTA distributed transactions via Atomikos",
                        "tag": "core"
                    },
                    {
                        "id": "jta-bitronix",
                        "name": "JTA (Bitronix)",
                        "group": "Core",
                        "description": "JTA distributed transactions via Bitronix",
                        "tag": "core"
                    },
                    {
                        "id": "jta-narayana",
                        "name": "JTA (Narayana)",
                        "group": "Core",
                        "description": "JTA distributed transactions via Narayana",
                        "tag": "core"
                    },
                    {
                        "id": "aop",
                        "name": "Aspects",
                        "group": "Core",
                        "description": "Create your own Aspects using Spring AOP and AspectJ",
                        "tag": "core"
                    }
                ],
                "web": [
                    {
                        "id": "web",
                        "name": "Web",
                        "group": "Web",
                        "description": "Full-stack web development with Tomcat and Spring MVC",
                        "weight": 100,
                        "tag": "web"
                    },
                    {
                        "id": "data-rest",
                        "name": "Rest Repositories",
                        "group": "Web",
                        "description": "Exposing Spring Data repositories over REST via spring-data-rest-webmvc",
                        "weight": 10,
                        "tag": "web"
                    },
                    {
                        "id": "data-rest-hal",
                        "name": "Rest Repositories HAL Browser",
                        "group": "Web",
                        "description": "Browsing Spring Data REST repositories in your browser",
                        "tag": "web"
                    },
                    {
                        "id": "hateoas",
                        "name": "HATEOAS",
                        "group": "Web",
                        "description": "HATEOAS-based RESTful services",
                        "tag": "web"
                    },
                    {
                        "id": "web-services",
                        "name": "Web Services",
                        "group": "Web",
                        "description": "Contract-first SOAP service development with Spring Web Services",
                        "keywords": "ws",
                        "tag": "web"
                    },
                    {
                        "id": "jersey",
                        "name": "Jersey (JAX-RS)",
                        "group": "Web",
                        "description": "RESTful Web Services framework with support of JAX-RS",
                        "tag": "web"
                    },
                    {
                        "id": "websocket",
                        "name": "Websocket",
                        "group": "Web",
                        "description": "Websocket development with SockJS and STOMP",
                        "tag": "web"
                    },
                    {
                        "id": "restdocs",
                        "name": "REST Docs",
                        "group": "Web",
                        "description": "Document RESTful services by combining hand-written and auto-generated documentation",
                        "tag": "web"
                    },
                    {
                        "id": "vaadin",
                        "name": "Vaadin",
                        "group": "Web",
                        "description": "Vaadin java web application framework",
                        "tag": "web"
                    },
                    {
                        "id": "cxf-jaxrs",
                        "name": "Apache CXF (JAX-RS)",
                        "group": "Web",
                        "description": "RESTful Web Services framework with support of JAX-RS",
                        "tag": "web"
                    },
                    {
                        "id": "ratpack",
                        "name": "Ratpack",
                        "group": "Web",
                        "description": "Spring Boot integration for the Ratpack framework",
                        "tag": "web"
                    },
                    {
                        "id": "mobile",
                        "name": "Mobile",
                        "group": "Web",
                        "description": "Simplify the development of mobile web applications with spring-mobile",
                        "tag": "web"
                    }
                ],
                "template engines": [
                    {
                        "id": "thymeleaf",
                        "name": "Thymeleaf",
                        "group": "Template Engines",
                        "description": "Thymeleaf templating engine, including integration with Spring",
                        "weight": 90,
                        "keywords": "template",
                        "tag": "template engines"
                    },
                    {
                        "id": "freemarker",
                        "name": "Freemarker",
                        "group": "Template Engines",
                        "description": "FreeMarker templating engine",
                        "keywords": "template",
                        "tag": "template engines"
                    },
                    {
                        "id": "mustache",
                        "name": "Mustache",
                        "group": "Template Engines",
                        "description": "Mustache templating engine",
                        "keywords": "template",
                        "tag": "template engines"
                    },
                    {
                        "id": "groovy-templates",
                        "name": "Groovy Templates",
                        "group": "Template Engines",
                        "description": "Groovy templating engine",
                        "tag": "template engines"
                    }
                ],
                "sql": [
                    {
                        "id": "data-jpa",
                        "name": "JPA",
                        "group": "SQL",
                        "description": "Java Persistence API including spring-data-jpa, spring-orm and Hibernate",
                        "weight": 100,
                        "keywords": "jpa",
                        "tag": "sql"
                    },
                    {
                        "id": "mysql",
                        "name": "MySQL",
                        "group": "SQL",
                        "description": "MySQL jdbc driver",
                        "tag": "sql"
                    },
                    {
                        "id": "h2",
                        "name": "H2",
                        "group": "SQL",
                        "description": "H2 database (with embedded support)",
                        "tag": "sql"
                    },
                    {
                        "id": "jdbc",
                        "name": "JDBC",
                        "group": "SQL",
                        "description": "JDBC databases",
                        "tag": "sql"
                    },
                    {
                        "id": "mybatis",
                        "name": "MyBatis",
                        "group": "SQL",
                        "description": "Persistence support using MyBatis",
                        "tag": "sql"
                    },
                    {
                        "id": "postgresql",
                        "name": "PostgreSQL",
                        "group": "SQL",
                        "description": "PostgreSQL jdbc driver",
                        "tag": "sql"
                    },
                    {
                        "id": "hsql",
                        "name": "HSQLDB",
                        "group": "SQL",
                        "description": "HSQLDB database (with embedded support)",
                        "tag": "sql"
                    },
                    {
                        "id": "derby",
                        "name": "Apache Derby",
                        "group": "SQL",
                        "description": "Apache Derby database (with embedded support)",
                        "tag": "sql"
                    },
                    {
                        "id": "liquibase",
                        "name": "Liquibase",
                        "group": "SQL",
                        "description": "Liquibase Database Migrations library",
                        "tag": "sql"
                    },
                    {
                        "id": "flyway",
                        "name": "Flyway",
                        "group": "SQL",
                        "description": "Flyway Database Migrations library",
                        "tag": "sql"
                    },
                    {
                        "id": "jooq",
                        "name": "JOOQ",
                        "group": "SQL",
                        "description": "Persistence support using Java Object Oriented Querying",
                        "tag": "sql"
                    }
                ],
                "nosql": [
                    {
                        "id": "data-redis",
                        "name": "Redis",
                        "group": "NoSQL",
                        "description": "Redis key-value data store, including spring-data-redis",
                        "keywords": "redis",
                        "tag": "nosql"
                    },
                    {
                        "id": "data-mongodb",
                        "name": "MongoDB",
                        "group": "NoSQL",
                        "description": "MongoDB NoSQL Database, including spring-data-mongodb",
                        "weight": 50,
                        "tag": "nosql"
                    },
                    {
                        "id": "flapdoodle-mongo",
                        "name": "Embedded MongoDB",
                        "group": "NoSQL",
                        "description": "Embedded MongoDB for testing",
                        "tag": "nosql"
                    },
                    {
                        "id": "data-elasticsearch",
                        "name": "Elasticsearch",
                        "group": "NoSQL",
                        "description": "Elasticsearch search and analytics engine including spring-data-elasticsearch",
                        "weight": 10,
                        "tag": "nosql"
                    },
                    {
                        "id": "data-solr",
                        "name": "Solr",
                        "group": "NoSQL",
                        "description": "Apache Solr search platform, including spring-data-solr",
                        "tag": "nosql"
                    },
                    {
                        "id": "data-cassandra",
                        "name": "Cassandra",
                        "group": "NoSQL",
                        "description": "Cassandra NoSQL Database, including spring-data-cassandra",
                        "tag": "nosql"
                    },
                    {
                        "id": "data-couchbase",
                        "name": "Couchbase",
                        "group": "NoSQL",
                        "description": "Couchbase NoSQL database, including spring-data-couchbase",
                        "tag": "nosql"
                    },
                    {
                        "id": "data-neo4j",
                        "name": "Neo4j",
                        "group": "NoSQL",
                        "description": "Neo4j NoSQL graph database, including spring-data-neo4j",
                        "tag": "nosql"
                    },
                    {
                        "id": "data-gemfire",
                        "name": "Gemfire",
                        "group": "NoSQL",
                        "description": "GemFire distributed data store including spring-data-gemfire",
                        "tag": "nosql"
                    }
                ],
                "messaging": [
                    {
                        "id": "amqp",
                        "name": "RabbitMQ",
                        "group": "Messaging",
                        "description": "Advanced Message Queuing Protocol via spring-rabbit",
                        "weight": 100,
                        "keywords": "messaging",
                        "tag": "messaging"
                    },
                    {
                        "id": "activemq",
                        "name": "JMS (ActiveMQ)",
                        "group": "Messaging",
                        "description": "Java Message Service API via Apache ActiveMQ",
                        "tag": "messaging"
                    },
                    {
                        "id": "artemis",
                        "name": "JMS (Artemis)",
                        "group": "Messaging",
                        "description": "Java Message Service API via Apache Artemis",
                        "tag": "messaging"
                    }
                ],
                "cloud core": [
                    {
                        "id": "cloud-connectors",
                        "name": "Cloud Connectors",
                        "group": "Cloud Core",
                        "description": "Simplifies connecting to services in cloud platforms, including spring-cloud-connector and spring-cloud-cloudfoundry-connector",
                        "tag": "cloud core"
                    },
                    {
                        "id": "cloud-starter",
                        "name": "Cloud Bootstrap",
                        "group": "Cloud Core",
                        "description": "spring-cloud-context (e.g. Bootstrap context and @RefreshScope)",
                        "weight": 100,
                        "tag": "cloud core"
                    },
                    {
                        "id": "cloud-security",
                        "name": "Cloud Security",
                        "group": "Cloud Core",
                        "description": "Secure load balancing and routing with spring-cloud-security",
                        "tag": "cloud core"
                    },
                    {
                        "id": "cloud-oauth2",
                        "name": "Cloud OAuth2",
                        "group": "Cloud Core",
                        "description": "OAuth2 and distributed application patterns with spring-cloud-security",
                        "tag": "cloud core"
                    },
                    {
                        "id": "cloud-task",
                        "name": "Cloud Task",
                        "group": "Cloud Core",
                        "description": "Task result tracking and integration with Spring Batch",
                        "tag": "cloud core"
                    }
                ],
                "cloud config": [
                    {
                        "id": "cloud-config-client",
                        "name": "Config Client",
                        "group": "Cloud Config",
                        "description": "spring-cloud-config Client",
                        "weight": 100,
                        "tag": "cloud config"
                    },
                    {
                        "id": "cloud-config-server",
                        "name": "Config Server",
                        "group": "Cloud Config",
                        "description": "Central management for configuration via a git or svn backend",
                        "tag": "cloud config"
                    },
                    {
                        "id": "cloud-starter-zookeeper-config",
                        "name": "Zookeeper Configuration",
                        "group": "Cloud Config",
                        "description": "Configuration management with Zookeeper and spring-cloud-zookeeper-config",
                        "tag": "cloud config"
                    },
                    {
                        "id": "cloud-starter-consul-config",
                        "name": "Consul Configuration",
                        "group": "Cloud Config",
                        "description": "Configuration management with Hashicorp Consul",
                        "tag": "cloud config"
                    }
                ],
                "cloud discovery": [
                    {
                        "id": "cloud-eureka",
                        "name": "Eureka Discovery",
                        "group": "Cloud Discovery",
                        "description": "Service discovery using spring-cloud-netflix and Eureka",
                        "weight": 100,
                        "tag": "cloud discovery"
                    },
                    {
                        "id": "cloud-eureka-server",
                        "name": "Eureka Server",
                        "group": "Cloud Discovery",
                        "description": "spring-cloud-netflix Eureka Server",
                        "tag": "cloud discovery"
                    },
                    {
                        "id": "cloud-starter-zookeeper-discovery",
                        "name": "Zookeeper Discovery",
                        "group": "Cloud Discovery",
                        "description": "Service discovery with Zookeeper and spring-cloud-zookeeper-discovery",
                        "tag": "cloud discovery"
                    },
                    {
                        "id": "cloud-cloudfoundry-discovery",
                        "name": "Cloud Foundry Discovery",
                        "group": "Cloud Discovery",
                        "description": "Service discovery with Cloud Foundry",
                        "tag": "cloud discovery"
                    },
                    {
                        "id": "cloud-starter-consul-discovery",
                        "name": "Consul Discovery",
                        "group": "Cloud Discovery",
                        "description": "Service discovery with Hashicorp Consul",
                        "tag": "cloud discovery"
                    }
                ],
                "cloud routing": [
                    {
                        "id": "cloud-zuul",
                        "name": "Zuul",
                        "group": "Cloud Routing",
                        "description": "Intelligent and programmable routing with spring-cloud-netflix Zuul",
                        "tag": "cloud routing"
                    },
                    {
                        "id": "cloud-ribbon",
                        "name": "Ribbon",
                        "group": "Cloud Routing",
                        "description": "Client side load balancing with spring-cloud-netflix and Ribbon",
                        "tag": "cloud routing"
                    },
                    {
                        "id": "cloud-feign",
                        "name": "Feign",
                        "group": "Cloud Routing",
                        "description": "Declarative REST clients with spring-cloud-netflix Feign",
                        "tag": "cloud routing"
                    }
                ],
                "cloud circuit breaker": [
                    {
                        "id": "cloud-hystrix",
                        "name": "Hystrix",
                        "group": "Cloud Circuit Breaker",
                        "description": "Circuit breaker with spring-cloud-netflix Hystrix",
                        "tag": "cloud circuit breaker"
                    },
                    {
                        "id": "cloud-hystrix-dashboard",
                        "name": "Hystrix Dashboard",
                        "group": "Cloud Circuit Breaker",
                        "description": "Circuit breaker dashboard with spring-cloud-netflix Hystrix",
                        "tag": "cloud circuit breaker"
                    },
                    {
                        "id": "cloud-turbine",
                        "name": "Turbine",
                        "group": "Cloud Circuit Breaker",
                        "description": "Circuit breaker metric aggregation using spring-cloud-netflix with Turbine and server-sent events",
                        "tag": "cloud circuit breaker"
                    },
                    {
                        "id": "cloud-turbine-stream",
                        "name": "Turbine Stream",
                        "group": "Cloud Circuit Breaker",
                        "description": "Circuit breaker metric aggregation using spring-cloud-netflix with Turbine and Spring Cloud Stream (requires a binder, e.g. Kafka or RabbitMQ)",
                        "tag": "cloud circuit breaker"
                    }
                ],
                "cloud tracing": [
                    {
                        "id": "cloud-starter-sleuth",
                        "name": "Sleuth",
                        "group": "Cloud Tracing",
                        "description": "Distributed tracing via logs with spring-cloud-sleuth",
                        "tag": "cloud tracing"
                    },
                    {
                        "id": "cloud-starter-zipkin",
                        "name": "Zipkin Client",
                        "group": "Cloud Tracing",
                        "description": "Distributed tracing with an existing Zipkin installation and spring-cloud-sleuth-zipkin. Alternatively, consider Sleuth Stream.",
                        "tag": "cloud tracing"
                    },
                    {
                        "id": "cloud-sleuth-stream",
                        "name": "Sleuth Stream",
                        "group": "Cloud Tracing",
                        "description": "Marshals Spring Cloud Sleuth Spans over a Spring Cloud Stream binder",
                        "tag": "cloud tracing"
                    },
                    {
                        "id": "cloud-sleuth-zipkin-stream",
                        "name": "Zipkin Stream",
                        "group": "Cloud Tracing",
                        "description": "Consumes span data in messages from Spring Cloud Sleuth Stream and writes them to a Zipkin store",
                        "tag": "cloud tracing"
                    },
                    {
                        "id": "zipkin-ui",
                        "name": "Zipkin UI",
                        "group": "Cloud Tracing",
                        "description": "add the Zipkin UI module to the Zipkin server to get a Zipkin service that accepts Spans and provides visualization",
                        "tag": "cloud tracing"
                    }
                ],
                "cloud messaging": [
                    {
                        "id": "cloud-bus",
                        "name": "Cloud Bus",
                        "group": "Cloud Messaging",
                        "description": "A simple control bus using Spring Cloud Stream (requires a binder, e.g. Kafka or RabbitMQ)",
                        "tag": "cloud messaging"
                    },
                    {
                        "id": "cloud-stream",
                        "name": "Cloud Stream",
                        "group": "Cloud Messaging",
                        "description": "Messaging microservices with Spring Cloud Stream (requires a binder, e.g. Kafka or RabbitMQ)",
                        "weight": 90,
                        "tag": "cloud messaging"
                    }
                ],
                "cloud aws": [
                    {
                        "id": "cloud-aws",
                        "name": "AWS Core",
                        "group": "Cloud AWS",
                        "description": "AWS native services from spring-cloud-aws",
                        "tag": "cloud aws"
                    },
                    {
                        "id": "cloud-aws-jdbc",
                        "name": "AWS JDBC",
                        "group": "Cloud AWS",
                        "description": "Relational databases on AWS with RDS and spring-cloud-aws-jdbc",
                        "tag": "cloud aws"
                    },
                    {
                        "id": "cloud-aws-messaging",
                        "name": "AWS Messaging",
                        "group": "Cloud AWS",
                        "description": "Messaging on AWS with SQS and spring-cloud-aws-messaging",
                        "tag": "cloud aws"
                    }
                ],
                "cloud contract": [
                    {
                        "id": "cloud-contract-verifier",
                        "name": "Cloud Contract Verifier",
                        "group": "Cloud Contract",
                        "description": "Test dependencies required for autogenerated tests",
                        "tag": "cloud contract"
                    },
                    {
                        "id": "cloud-contract-stub-runner",
                        "name": "Cloud Contract Stub Runner",
                        "group": "Cloud Contract",
                        "description": "Stub Runner for HTTP/Messaging based communication",
                        "tag": "cloud contract"
                    },
                    {
                        "id": "cloud-contract-wiremock",
                        "name": "Cloud Contract WireMock",
                        "group": "Cloud Contract",
                        "description": "Test dependencies required for the WireMock HTTP server",
                        "tag": "cloud contract"
                    }
                ],
                "pivotal cloud foundry": [
                    {
                        "id": "scs-config-client",
                        "name": "Config Client (PCF)",
                        "group": "Pivotal Cloud Foundry",
                        "description": "Config client on Pivotal Cloud Foundry",
                        "tag": "pivotal cloud foundry"
                    },
                    {
                        "id": "scs-service-registry",
                        "name": "Service Registry (PCF)",
                        "group": "Pivotal Cloud Foundry",
                        "description": "Eureka service discovery on Pivotal Cloud Foundry",
                        "tag": "pivotal cloud foundry"
                    },
                    {
                        "id": "scs-circuit-breaker",
                        "name": "Circuit Breaker (PCF)",
                        "group": "Pivotal Cloud Foundry",
                        "description": "Hystrix circuit breaker on Pivotal Cloud Foundry",
                        "tag": "pivotal cloud foundry"
                    }
                ],
                "social": [
                    {
                        "id": "social-facebook",
                        "name": "Facebook",
                        "group": "Social",
                        "description": "spring-social-facebook",
                        "weight": 25,
                        "tag": "social"
                    },
                    {
                        "id": "social-linkedin",
                        "name": "LinkedIn",
                        "group": "Social",
                        "description": "spring-social-linkedin",
                        "tag": "social"
                    },
                    {
                        "id": "social-twitter",
                        "name": "Twitter",
                        "group": "Social",
                        "description": "spring-social-twitter",
                        "tag": "social"
                    }
                ],
                "i/o": [
                    {
                        "id": "batch",
                        "name": "Batch",
                        "group": "I/O",
                        "description": "Spring Batch support",
                        "weight": 100,
                        "tag": "i/o"
                    },
                    {
                        "id": "integration",
                        "name": "Integration",
                        "group": "I/O",
                        "description": "Common spring-integration modules",
                        "weight": 100,
                        "tag": "i/o"
                    },
                    {
                        "id": "mail",
                        "name": "Mail",
                        "group": "I/O",
                        "description": "javax.mail",
                        "tag": "i/o"
                    },
                    {
                        "id": "camel",
                        "name": "Apache Camel",
                        "group": "I/O",
                        "description": "Integration using Apache Camel",
                        "tag": "i/o"
                    },
                    {
                        "id": "activiti-basic",
                        "name": "Activiti",
                        "group": "I/O",
                        "description": "Activiti BPMN workflow engine",
                        "tag": "i/o"
                    },
                    {
                        "id": "spring-shell",
                        "name": "Spring Shell",
                        "group": "I/O",
                        "description": "Build shell-based clients",
                        "tag": "i/o"
                    }
                ],
                "ops": [
                    {
                        "id": "actuator",
                        "name": "Actuator",
                        "group": "Ops",
                        "description": "Production ready features to help you monitor and manage your application",
                        "tag": "ops"
                    },
                    {
                        "id": "actuator-docs",
                        "name": "Actuator Docs",
                        "group": "Ops",
                        "description": "API documentation for the Actuator endpoints",
                        "tag": "ops"
                    },
                    {
                        "id": "remote-shell",
                        "name": "Remote Shell",
                        "group": "Ops",
                        "description": "CRaSH shell integration",
                        "tag": "ops"
                    }
                ]
            }
        },
        {
            "1.5.11.BUILD-SNAPSHOT": {
                "core": [
                    {
                        "id": "devtools",
                        "name": "DevTools",
                        "group": "Core",
                        "description": "Spring Boot Development Tools",
                        "tag": "core"
                    },
                    {
                        "id": "security",
                        "name": "Security",
                        "group": "Core",
                        "description": "Secure your application via spring-security",
                        "weight": 100,
                        "tag": "core"
                    },
                    {
                        "id": "lombok",
                        "name": "Lombok",
                        "group": "Core",
                        "description": "Java annotation library which helps to reduce boilerplate code and code faster",
                        "tag": "core"
                    },
                    {
                        "id": "configuration-processor",
                        "name": "Configuration Processor",
                        "group": "Core",
                        "description": "Generate metadata for your custom configuration keys",
                        "tag": "core"
                    },
                    {
                        "id": "session",
                        "name": "Session",
                        "group": "Core",
                        "description": "API and implementations for managing a user\u2019s session information",
                        "tag": "core"
                    },
                    {
                        "id": "cache",
                        "name": "Cache",
                        "group": "Core",
                        "description": "Spring's Cache abstraction",
                        "tag": "core"
                    },
                    {
                        "id": "validation",
                        "name": "Validation",
                        "group": "Core",
                        "description": "JSR-303 validation infrastructure (already included with web)",
                        "tag": "core"
                    },
                    {
                        "id": "retry",
                        "name": "Retry",
                        "group": "Core",
                        "description": "Provide declarative retry support via spring-retry",
                        "tag": "core"
                    },
                    {
                        "id": "jta-atomikos",
                        "name": "JTA (Atomikos)",
                        "group": "Core",
                        "description": "JTA distributed transactions via Atomikos",
                        "tag": "core"
                    },
                    {
                        "id": "jta-bitronix",
                        "name": "JTA (Bitronix)",
                        "group": "Core",
                        "description": "JTA distributed transactions via Bitronix",
                        "tag": "core"
                    },
                    {
                        "id": "jta-narayana",
                        "name": "JTA (Narayana)",
                        "group": "Core",
                        "description": "JTA distributed transactions via Narayana",
                        "tag": "core"
                    },
                    {
                        "id": "aop",
                        "name": "Aspects",
                        "group": "Core",
                        "description": "Create your own Aspects using Spring AOP and AspectJ",
                        "tag": "core"
                    }
                ],
                "web": [
                    {
                        "id": "web",
                        "name": "Web",
                        "group": "Web",
                        "description": "Full-stack web development with Tomcat and Spring MVC",
                        "weight": 100,
                        "tag": "web"
                    },
                    {
                        "id": "data-rest",
                        "name": "Rest Repositories",
                        "group": "Web",
                        "description": "Exposing Spring Data repositories over REST via spring-data-rest-webmvc",
                        "weight": 10,
                        "tag": "web"
                    },
                    {
                        "id": "data-rest-hal",
                        "name": "Rest Repositories HAL Browser",
                        "group": "Web",
                        "description": "Browsing Spring Data REST repositories in your browser",
                        "tag": "web"
                    },
                    {
                        "id": "hateoas",
                        "name": "HATEOAS",
                        "group": "Web",
                        "description": "HATEOAS-based RESTful services",
                        "tag": "web"
                    },
                    {
                        "id": "web-services",
                        "name": "Web Services",
                        "group": "Web",
                        "description": "Contract-first SOAP service development with Spring Web Services",
                        "keywords": "ws",
                        "tag": "web"
                    },
                    {
                        "id": "jersey",
                        "name": "Jersey (JAX-RS)",
                        "group": "Web",
                        "description": "RESTful Web Services framework with support of JAX-RS",
                        "tag": "web"
                    },
                    {
                        "id": "websocket",
                        "name": "Websocket",
                        "group": "Web",
                        "description": "Websocket development with SockJS and STOMP",
                        "tag": "web"
                    },
                    {
                        "id": "restdocs",
                        "name": "REST Docs",
                        "group": "Web",
                        "description": "Document RESTful services by combining hand-written and auto-generated documentation",
                        "tag": "web"
                    },
                    {
                        "id": "vaadin",
                        "name": "Vaadin",
                        "group": "Web",
                        "description": "Vaadin java web application framework",
                        "tag": "web"
                    },
                    {
                        "id": "cxf-jaxrs",
                        "name": "Apache CXF (JAX-RS)",
                        "group": "Web",
                        "description": "RESTful Web Services framework with support of JAX-RS",
                        "tag": "web"
                    },
                    {
                        "id": "ratpack",
                        "name": "Ratpack",
                        "group": "Web",
                        "description": "Spring Boot integration for the Ratpack framework",
                        "tag": "web"
                    },
                    {
                        "id": "mobile",
                        "name": "Mobile",
                        "group": "Web",
                        "description": "Simplify the development of mobile web applications with spring-mobile",
                        "tag": "web"
                    },
                    {
                        "id": "keycloak",
                        "name": "Keycloak",
                        "group": "Web",
                        "description": "Keycloak integration, an open source Identity and Access Management solution.",
                        "tag": "web"
                    }
                ],
                "template engines": [
                    {
                        "id": "thymeleaf",
                        "name": "Thymeleaf",
                        "group": "Template Engines",
                        "description": "Thymeleaf templating engine, including integration with Spring",
                        "weight": 90,
                        "keywords": "template",
                        "tag": "template engines"
                    },
                    {
                        "id": "freemarker",
                        "name": "Freemarker",
                        "group": "Template Engines",
                        "description": "FreeMarker templating engine",
                        "keywords": "template",
                        "tag": "template engines"
                    },
                    {
                        "id": "mustache",
                        "name": "Mustache",
                        "group": "Template Engines",
                        "description": "Mustache templating engine",
                        "keywords": "template",
                        "tag": "template engines"
                    },
                    {
                        "id": "groovy-templates",
                        "name": "Groovy Templates",
                        "group": "Template Engines",
                        "description": "Groovy templating engine",
                        "tag": "template engines"
                    }
                ],
                "sql": [
                    {
                        "id": "data-jpa",
                        "name": "JPA",
                        "group": "SQL",
                        "description": "Java Persistence API including spring-data-jpa, spring-orm and Hibernate",
                        "weight": 100,
                        "keywords": "jpa",
                        "tag": "sql"
                    },
                    {
                        "id": "mysql",
                        "name": "MySQL",
                        "group": "SQL",
                        "description": "MySQL jdbc driver",
                        "tag": "sql"
                    },
                    {
                        "id": "h2",
                        "name": "H2",
                        "group": "SQL",
                        "description": "H2 database (with embedded support)",
                        "tag": "sql"
                    },
                    {
                        "id": "jdbc",
                        "name": "JDBC",
                        "group": "SQL",
                        "description": "JDBC databases",
                        "tag": "sql"
                    },
                    {
                        "id": "mybatis",
                        "name": "MyBatis",
                        "group": "SQL",
                        "description": "Persistence support using MyBatis",
                        "tag": "sql"
                    },
                    {
                        "id": "postgresql",
                        "name": "PostgreSQL",
                        "group": "SQL",
                        "description": "PostgreSQL jdbc driver",
                        "tag": "sql"
                    },
                    {
                        "id": "sqlserver",
                        "name": "SQL Server",
                        "group": "SQL",
                        "description": "Microsoft SQL Server jdbc driver",
                        "tag": "sql"
                    },
                    {
                        "id": "hsql",
                        "name": "HSQLDB",
                        "group": "SQL",
                        "description": "HSQLDB database (with embedded support)",
                        "tag": "sql"
                    },
                    {
                        "id": "derby",
                        "name": "Apache Derby",
                        "group": "SQL",
                        "description": "Apache Derby database (with embedded support)",
                        "tag": "sql"
                    },
                    {
                        "id": "liquibase",
                        "name": "Liquibase",
                        "group": "SQL",
                        "description": "Liquibase Database Migrations library",
                        "tag": "sql"
                    },
                    {
                        "id": "flyway",
                        "name": "Flyway",
                        "group": "SQL",
                        "description": "Flyway Database Migrations library",
                        "tag": "sql"
                    },
                    {
                        "id": "jooq",
                        "name": "JOOQ",
                        "group": "SQL",
                        "description": "Persistence support using Java Object Oriented Querying",
                        "tag": "sql"
                    }
                ],
                "nosql": [
                    {
                        "id": "data-redis",
                        "name": "Redis",
                        "group": "NoSQL",
                        "description": "Redis key-value data store, including spring-data-redis",
                        "keywords": "redis",
                        "tag": "nosql"
                    },
                    {
                        "id": "data-mongodb",
                        "name": "MongoDB",
                        "group": "NoSQL",
                        "description": "MongoDB NoSQL Database, including spring-data-mongodb",
                        "weight": 50,
                        "tag": "nosql"
                    },
                    {
                        "id": "flapdoodle-mongo",
                        "name": "Embedded MongoDB",
                        "group": "NoSQL",
                        "description": "Embedded MongoDB for testing",
                        "tag": "nosql"
                    },
                    {
                        "id": "data-elasticsearch",
                        "name": "Elasticsearch",
                        "group": "NoSQL",
                        "description": "Elasticsearch search and analytics engine including spring-data-elasticsearch",
                        "weight": 10,
                        "tag": "nosql"
                    },
                    {
                        "id": "data-solr",
                        "name": "Solr",
                        "group": "NoSQL",
                        "description": "Apache Solr search platform, including spring-data-solr",
                        "tag": "nosql"
                    },
                    {
                        "id": "data-cassandra",
                        "name": "Cassandra",
                        "group": "NoSQL",
                        "description": "Cassandra NoSQL Database, including spring-data-cassandra",
                        "tag": "nosql"
                    },
                    {
                        "id": "data-couchbase",
                        "name": "Couchbase",
                        "group": "NoSQL",
                        "description": "Couchbase NoSQL database, including spring-data-couchbase",
                        "tag": "nosql"
                    },
                    {
                        "id": "data-neo4j",
                        "name": "Neo4j",
                        "group": "NoSQL",
                        "description": "Neo4j NoSQL graph database, including spring-data-neo4j",
                        "tag": "nosql"
                    },
                    {
                        "id": "data-gemfire",
                        "name": "Gemfire",
                        "group": "NoSQL",
                        "description": "GemFire distributed data store including spring-data-gemfire",
                        "tag": "nosql"
                    }
                ],
                "messaging": [
                    {
                        "id": "amqp",
                        "name": "RabbitMQ",
                        "group": "Messaging",
                        "description": "Advanced Message Queuing Protocol via spring-rabbit",
                        "weight": 100,
                        "keywords": "messaging",
                        "tag": "messaging"
                    },
                    {
                        "id": "kafka",
                        "name": "Kafka",
                        "group": "Messaging",
                        "description": "Kafka messaging support using Spring Kafka",
                        "weight": 100,
                        "keywords": "messaging",
                        "tag": "messaging"
                    },
                    {
                        "id": "activemq",
                        "name": "JMS (ActiveMQ)",
                        "group": "Messaging",
                        "description": "Java Message Service API via Apache ActiveMQ",
                        "tag": "messaging"
                    },
                    {
                        "id": "artemis",
                        "name": "JMS (Artemis)",
                        "group": "Messaging",
                        "description": "Java Message Service API via Apache Artemis",
                        "tag": "messaging"
                    }
                ],
                "cloud core": [
                    {
                        "id": "cloud-connectors",
                        "name": "Cloud Connectors",
                        "group": "Cloud Core",
                        "description": "Simplifies connecting to services in cloud platforms, including spring-cloud-connector and spring-cloud-cloudfoundry-connector",
                        "tag": "cloud core"
                    },
                    {
                        "id": "cloud-starter",
                        "name": "Cloud Bootstrap",
                        "group": "Cloud Core",
                        "description": "spring-cloud-context (e.g. Bootstrap context and @RefreshScope)",
                        "weight": 100,
                        "tag": "cloud core"
                    },
                    {
                        "id": "cloud-security",
                        "name": "Cloud Security",
                        "group": "Cloud Core",
                        "description": "Secure load balancing and routing with spring-cloud-security",
                        "tag": "cloud core"
                    },
                    {
                        "id": "cloud-oauth2",
                        "name": "Cloud OAuth2",
                        "group": "Cloud Core",
                        "description": "OAuth2 and distributed application patterns with spring-cloud-security",
                        "tag": "cloud core"
                    },
                    {
                        "id": "cloud-task",
                        "name": "Cloud Task",
                        "group": "Cloud Core",
                        "description": "Task result tracking and integration with Spring Batch",
                        "tag": "cloud core"
                    }
                ],
                "cloud config": [
                    {
                        "id": "cloud-config-client",
                        "name": "Config Client",
                        "group": "Cloud Config",
                        "description": "spring-cloud-config Client",
                        "weight": 100,
                        "tag": "cloud config"
                    },
                    {
                        "id": "cloud-config-server",
                        "name": "Config Server",
                        "group": "Cloud Config",
                        "description": "Central management for configuration via a git or svn backend",
                        "tag": "cloud config"
                    },
                    {
                        "id": "cloud-starter-vault-config",
                        "name": "Vault Configuration",
                        "group": "Cloud Config",
                        "description": "Configuration management with HashiCorp Vault",
                        "tag": "cloud config"
                    },
                    {
                        "id": "cloud-starter-zookeeper-config",
                        "name": "Zookeeper Configuration",
                        "group": "Cloud Config",
                        "description": "Configuration management with Zookeeper and spring-cloud-zookeeper-config",
                        "tag": "cloud config"
                    },
                    {
                        "id": "cloud-starter-consul-config",
                        "name": "Consul Configuration",
                        "group": "Cloud Config",
                        "description": "Configuration management with Hashicorp Consul",
                        "tag": "cloud config"
                    }
                ],
                "cloud discovery": [
                    {
                        "id": "cloud-eureka",
                        "name": "Eureka Discovery",
                        "group": "Cloud Discovery",
                        "description": "Service discovery using spring-cloud-netflix and Eureka",
                        "weight": 100,
                        "tag": "cloud discovery"
                    },
                    {
                        "id": "cloud-eureka-server",
                        "name": "Eureka Server",
                        "group": "Cloud Discovery",
                        "description": "spring-cloud-netflix Eureka Server",
                        "tag": "cloud discovery"
                    },
                    {
                        "id": "cloud-starter-zookeeper-discovery",
                        "name": "Zookeeper Discovery",
                        "group": "Cloud Discovery",
                        "description": "Service discovery with Zookeeper and spring-cloud-zookeeper-discovery",
                        "tag": "cloud discovery"
                    },
                    {
                        "id": "cloud-cloudfoundry-discovery",
                        "name": "Cloud Foundry Discovery",
                        "group": "Cloud Discovery",
                        "description": "Service discovery with Cloud Foundry",
                        "tag": "cloud discovery"
                    },
                    {
                        "id": "cloud-starter-consul-discovery",
                        "name": "Consul Discovery",
                        "group": "Cloud Discovery",
                        "description": "Service discovery with Hashicorp Consul",
                        "tag": "cloud discovery"
                    }
                ],
                "cloud routing": [
                    {
                        "id": "cloud-zuul",
                        "name": "Zuul",
                        "group": "Cloud Routing",
                        "description": "Intelligent and programmable routing with spring-cloud-netflix Zuul",
                        "tag": "cloud routing"
                    },
                    {
                        "id": "cloud-ribbon",
                        "name": "Ribbon",
                        "group": "Cloud Routing",
                        "description": "Client side load balancing with spring-cloud-netflix and Ribbon",
                        "tag": "cloud routing"
                    },
                    {
                        "id": "cloud-feign",
                        "name": "Feign",
                        "group": "Cloud Routing",
                        "description": "Declarative REST clients with spring-cloud-netflix Feign",
                        "tag": "cloud routing"
                    }
                ],
                "cloud circuit breaker": [
                    {
                        "id": "cloud-hystrix",
                        "name": "Hystrix",
                        "group": "Cloud Circuit Breaker",
                        "description": "Circuit breaker with spring-cloud-netflix Hystrix",
                        "tag": "cloud circuit breaker"
                    },
                    {
                        "id": "cloud-hystrix-dashboard",
                        "name": "Hystrix Dashboard",
                        "group": "Cloud Circuit Breaker",
                        "description": "Circuit breaker dashboard with spring-cloud-netflix Hystrix",
                        "tag": "cloud circuit breaker"
                    },
                    {
                        "id": "cloud-turbine",
                        "name": "Turbine",
                        "group": "Cloud Circuit Breaker",
                        "description": "Circuit breaker metric aggregation using spring-cloud-netflix with Turbine and server-sent events",
                        "tag": "cloud circuit breaker"
                    },
                    {
                        "id": "cloud-turbine-stream",
                        "name": "Turbine Stream",
                        "group": "Cloud Circuit Breaker",
                        "description": "Circuit breaker metric aggregation using spring-cloud-netflix with Turbine and Spring Cloud Stream (requires a binder, e.g. Kafka or RabbitMQ)",
                        "tag": "cloud circuit breaker"
                    }
                ],
                "cloud tracing": [
                    {
                        "id": "cloud-starter-sleuth",
                        "name": "Sleuth",
                        "group": "Cloud Tracing",
                        "description": "Distributed tracing via logs with spring-cloud-sleuth",
                        "tag": "cloud tracing"
                    },
                    {
                        "id": "cloud-starter-zipkin",
                        "name": "Zipkin Client",
                        "group": "Cloud Tracing",
                        "description": "Distributed tracing with an existing Zipkin installation and spring-cloud-sleuth-zipkin. Alternatively, consider Sleuth Stream.",
                        "tag": "cloud tracing"
                    }
                ],
                "cloud messaging": [
                    {
                        "id": "cloud-bus",
                        "name": "Cloud Bus",
                        "group": "Cloud Messaging",
                        "description": "A simple control bus using Spring Cloud Stream (requires a binder, e.g. Kafka or RabbitMQ)",
                        "tag": "cloud messaging"
                    },
                    {
                        "id": "cloud-stream",
                        "name": "Cloud Stream",
                        "group": "Cloud Messaging",
                        "description": "Messaging microservices with Spring Cloud Stream (requires a binder, e.g. Kafka or RabbitMQ)",
                        "weight": 90,
                        "tag": "cloud messaging"
                    }
                ],
                "cloud aws": [
                    {
                        "id": "cloud-aws",
                        "name": "AWS Core",
                        "group": "Cloud AWS",
                        "description": "AWS native services from spring-cloud-aws",
                        "tag": "cloud aws"
                    },
                    {
                        "id": "cloud-aws-jdbc",
                        "name": "AWS JDBC",
                        "group": "Cloud AWS",
                        "description": "Relational databases on AWS with RDS and spring-cloud-aws-jdbc",
                        "tag": "cloud aws"
                    },
                    {
                        "id": "cloud-aws-messaging",
                        "name": "AWS Messaging",
                        "group": "Cloud AWS",
                        "description": "Messaging on AWS with SQS and spring-cloud-aws-messaging",
                        "tag": "cloud aws"
                    }
                ],
                "cloud contract": [
                    {
                        "id": "cloud-contract-verifier",
                        "name": "Cloud Contract Verifier",
                        "group": "Cloud Contract",
                        "description": "Test dependencies required for autogenerated tests",
                        "tag": "cloud contract"
                    },
                    {
                        "id": "cloud-contract-stub-runner",
                        "name": "Cloud Contract Stub Runner",
                        "group": "Cloud Contract",
                        "description": "Stub Runner for HTTP/Messaging based communication",
                        "tag": "cloud contract"
                    },
                    {
                        "id": "cloud-contract-wiremock",
                        "name": "Cloud Contract WireMock",
                        "group": "Cloud Contract",
                        "description": "Test dependencies required for the WireMock HTTP server",
                        "tag": "cloud contract"
                    }
                ],
                "pivotal cloud foundry": [
                    {
                        "id": "scs-config-client",
                        "name": "Config Client (PCF)",
                        "group": "Pivotal Cloud Foundry",
                        "description": "Config client on Pivotal Cloud Foundry",
                        "tag": "pivotal cloud foundry"
                    },
                    {
                        "id": "scs-service-registry",
                        "name": "Service Registry (PCF)",
                        "group": "Pivotal Cloud Foundry",
                        "description": "Eureka service discovery on Pivotal Cloud Foundry",
                        "tag": "pivotal cloud foundry"
                    },
                    {
                        "id": "scs-circuit-breaker",
                        "name": "Circuit Breaker (PCF)",
                        "group": "Pivotal Cloud Foundry",
                        "description": "Hystrix circuit breaker on Pivotal Cloud Foundry",
                        "tag": "pivotal cloud foundry"
                    }
                ],
                "azure": [
                    {
                        "id": "azure-support",
                        "name": "Azure Support",
                        "group": "Azure",
                        "description": "Auto-configuration for Azure Services (service bus, storage, active directory, cosmos DB, key vault and more)",
                        "tag": "azure"
                    },
                    {
                        "id": "azure-active-directory",
                        "name": "Azure Active Directory",
                        "group": "Azure",
                        "description": "Spring Security integration with Azure Active Directory for authentication",
                        "tag": "azure"
                    },
                    {
                        "id": "azure-keyvault-secrets",
                        "name": "Azure Key Vault",
                        "group": "Azure",
                        "description": "Spring value annotation integration with Azure Key Vault Secrets",
                        "tag": "azure"
                    },
                    {
                        "id": "azure-storage",
                        "name": "Azure Storage",
                        "group": "Azure",
                        "description": "Azure Storage service integration",
                        "tag": "azure"
                    }
                ],
                "social": [
                    {
                        "id": "social-facebook",
                        "name": "Facebook",
                        "group": "Social",
                        "description": "spring-social-facebook",
                        "weight": 25,
                        "tag": "social"
                    },
                    {
                        "id": "social-linkedin",
                        "name": "LinkedIn",
                        "group": "Social",
                        "description": "spring-social-linkedin",
                        "tag": "social"
                    },
                    {
                        "id": "social-twitter",
                        "name": "Twitter",
                        "group": "Social",
                        "description": "spring-social-twitter",
                        "tag": "social"
                    }
                ],
                "i/o": [
                    {
                        "id": "batch",
                        "name": "Batch",
                        "group": "I/O",
                        "description": "Spring Batch support",
                        "weight": 100,
                        "tag": "i/o"
                    },
                    {
                        "id": "integration",
                        "name": "Integration",
                        "group": "I/O",
                        "description": "Common spring-integration modules",
                        "weight": 100,
                        "tag": "i/o"
                    },
                    {
                        "id": "mail",
                        "name": "Mail",
                        "group": "I/O",
                        "description": "javax.mail",
                        "tag": "i/o"
                    },
                    {
                        "id": "camel",
                        "name": "Apache Camel",
                        "group": "I/O",
                        "description": "Integration using Apache Camel",
                        "tag": "i/o"
                    },
                    {
                        "id": "data-ldap",
                        "name": "LDAP",
                        "group": "I/O",
                        "description": "LDAP support, including spring-data-ldap",
                        "tag": "i/o"
                    },
                    {
                        "id": "activiti-basic",
                        "name": "Activiti",
                        "group": "I/O",
                        "description": "Activiti BPMN workflow engine",
                        "tag": "i/o"
                    },
                    {
                        "id": "spring-shell",
                        "name": "Spring Shell",
                        "group": "I/O",
                        "description": "Build shell-based clients",
                        "tag": "i/o"
                    }
                ],
                "ops": [
                    {
                        "id": "actuator",
                        "name": "Actuator",
                        "group": "Ops",
                        "description": "Production ready features to help you monitor and manage your application",
                        "tag": "ops"
                    },
                    {
                        "id": "codecentric-spring-boot-admin-server",
                        "name": "Spring Boot Admin (Server)",
                        "group": "Ops",
                        "description": "An admin interface for Spring Boot applications",
                        "tag": "ops"
                    },
                    {
                        "id": "codecentric-spring-boot-admin-client",
                        "name": "Spring Boot Admin (Client)",
                        "group": "Ops",
                        "description": "Register your application with a Spring Boot Admin instance",
                        "tag": "ops"
                    },
                    {
                        "id": "actuator-docs",
                        "name": "Actuator Docs",
                        "group": "Ops",
                        "description": "API documentation for the Actuator endpoints",
                        "tag": "ops"
                    }
                ]
            }
        },
        {
            "2.0.0.BUILD-SNAPSHOT": {
                "core": [
                    {
                        "id": "devtools",
                        "name": "DevTools",
                        "group": "Core",
                        "description": "Spring Boot Development Tools",
                        "tag": "core"
                    },
                    {
                        "id": "security",
                        "name": "Security",
                        "group": "Core",
                        "description": "Secure your application via spring-security",
                        "weight": 100,
                        "tag": "core"
                    },
                    {
                        "id": "lombok",
                        "name": "Lombok",
                        "group": "Core",
                        "description": "Java annotation library which helps to reduce boilerplate code and code faster",
                        "tag": "core"
                    },
                    {
                        "id": "configuration-processor",
                        "name": "Configuration Processor",
                        "group": "Core",
                        "description": "Generate metadata for your custom configuration keys",
                        "tag": "core"
                    },
                    {
                        "id": "session",
                        "name": "Session",
                        "group": "Core",
                        "description": "API and implementations for managing a user\u2019s session information",
                        "tag": "core"
                    },
                    {
                        "id": "cache",
                        "name": "Cache",
                        "group": "Core",
                        "description": "Spring's Cache abstraction",
                        "tag": "core"
                    },
                    {
                        "id": "validation",
                        "name": "Validation",
                        "group": "Core",
                        "description": "JSR-303 validation infrastructure (already included with web)",
                        "tag": "core"
                    },
                    {
                        "id": "retry",
                        "name": "Retry",
                        "group": "Core",
                        "description": "Provide declarative retry support via spring-retry",
                        "tag": "core"
                    },
                    {
                        "id": "jta-atomikos",
                        "name": "JTA (Atomikos)",
                        "group": "Core",
                        "description": "JTA distributed transactions via Atomikos",
                        "tag": "core"
                    },
                    {
                        "id": "jta-bitronix",
                        "name": "JTA (Bitronix)",
                        "group": "Core",
                        "description": "JTA distributed transactions via Bitronix",
                        "tag": "core"
                    },
                    {
                        "id": "jta-narayana",
                        "name": "JTA (Narayana)",
                        "group": "Core",
                        "description": "JTA distributed transactions via Narayana",
                        "tag": "core"
                    },
                    {
                        "id": "aop",
                        "name": "Aspects",
                        "group": "Core",
                        "description": "Create your own Aspects using Spring AOP and AspectJ",
                        "tag": "core"
                    }
                ],
                "web": [
                    {
                        "id": "web",
                        "name": "Web",
                        "group": "Web",
                        "description": "Full-stack web development with Tomcat and Spring MVC",
                        "weight": 100,
                        "tag": "web"
                    },
                    {
                        "id": "webflux",
                        "name": "Reactive Web",
                        "group": "Web",
                        "description": "Reactive web development with Netty and Spring WebFlux",
                        "weight": 90,
                        "tag": "web"
                    },
                    {
                        "id": "data-rest",
                        "name": "Rest Repositories",
                        "group": "Web",
                        "description": "Exposing Spring Data repositories over REST via spring-data-rest-webmvc",
                        "weight": 10,
                        "tag": "web"
                    },
                    {
                        "id": "data-rest-hal",
                        "name": "Rest Repositories HAL Browser",
                        "group": "Web",
                        "description": "Browsing Spring Data REST repositories in your browser",
                        "tag": "web"
                    },
                    {
                        "id": "hateoas",
                        "name": "HATEOAS",
                        "group": "Web",
                        "description": "HATEOAS-based RESTful services",
                        "tag": "web"
                    },
                    {
                        "id": "web-services",
                        "name": "Web Services",
                        "group": "Web",
                        "description": "Contract-first SOAP service development with Spring Web Services",
                        "keywords": "ws",
                        "tag": "web"
                    },
                    {
                        "id": "jersey",
                        "name": "Jersey (JAX-RS)",
                        "group": "Web",
                        "description": "RESTful Web Services framework with support of JAX-RS",
                        "tag": "web"
                    },
                    {
                        "id": "websocket",
                        "name": "Websocket",
                        "group": "Web",
                        "description": "Websocket development with SockJS and STOMP",
                        "tag": "web"
                    },
                    {
                        "id": "restdocs",
                        "name": "REST Docs",
                        "group": "Web",
                        "description": "Document RESTful services by combining hand-written and auto-generated documentation",
                        "tag": "web"
                    },
                    {
                        "id": "vaadin",
                        "name": "Vaadin",
                        "group": "Web",
                        "description": "Vaadin java web application framework",
                        "tag": "web"
                    }
                ],
                "template engines": [
                    {
                        "id": "thymeleaf",
                        "name": "Thymeleaf",
                        "group": "Template Engines",
                        "description": "Thymeleaf templating engine, including integration with Spring",
                        "weight": 90,
                        "keywords": "template",
                        "tag": "template engines"
                    },
                    {
                        "id": "freemarker",
                        "name": "Freemarker",
                        "group": "Template Engines",
                        "description": "FreeMarker templating engine",
                        "keywords": "template",
                        "tag": "template engines"
                    },
                    {
                        "id": "mustache",
                        "name": "Mustache",
                        "group": "Template Engines",
                        "description": "Mustache templating engine",
                        "keywords": "template",
                        "tag": "template engines"
                    },
                    {
                        "id": "groovy-templates",
                        "name": "Groovy Templates",
                        "group": "Template Engines",
                        "description": "Groovy templating engine",
                        "tag": "template engines"
                    }
                ],
                "sql": [
                    {
                        "id": "data-jpa",
                        "name": "JPA",
                        "group": "SQL",
                        "description": "Java Persistence API including spring-data-jpa, spring-orm and Hibernate",
                        "weight": 100,
                        "keywords": "jpa",
                        "tag": "sql"
                    },
                    {
                        "id": "mysql",
                        "name": "MySQL",
                        "group": "SQL",
                        "description": "MySQL jdbc driver",
                        "tag": "sql"
                    },
                    {
                        "id": "h2",
                        "name": "H2",
                        "group": "SQL",
                        "description": "H2 database (with embedded support)",
                        "tag": "sql"
                    },
                    {
                        "id": "jdbc",
                        "name": "JDBC",
                        "group": "SQL",
                        "description": "JDBC databases",
                        "tag": "sql"
                    },
                    {
                        "id": "mybatis",
                        "name": "MyBatis",
                        "group": "SQL",
                        "description": "Persistence support using MyBatis",
                        "tag": "sql"
                    },
                    {
                        "id": "postgresql",
                        "name": "PostgreSQL",
                        "group": "SQL",
                        "description": "PostgreSQL jdbc driver",
                        "tag": "sql"
                    },
                    {
                        "id": "sqlserver",
                        "name": "SQL Server",
                        "group": "SQL",
                        "description": "Microsoft SQL Server jdbc driver",
                        "tag": "sql"
                    },
                    {
                        "id": "hsql",
                        "name": "HSQLDB",
                        "group": "SQL",
                        "description": "HSQLDB database (with embedded support)",
                        "tag": "sql"
                    },
                    {
                        "id": "derby",
                        "name": "Apache Derby",
                        "group": "SQL",
                        "description": "Apache Derby database (with embedded support)",
                        "tag": "sql"
                    },
                    {
                        "id": "liquibase",
                        "name": "Liquibase",
                        "group": "SQL",
                        "description": "Liquibase Database Migrations library",
                        "tag": "sql"
                    },
                    {
                        "id": "flyway",
                        "name": "Flyway",
                        "group": "SQL",
                        "description": "Flyway Database Migrations library",
                        "tag": "sql"
                    },
                    {
                        "id": "jooq",
                        "name": "JOOQ",
                        "group": "SQL",
                        "description": "Persistence support using Java Object Oriented Querying",
                        "tag": "sql"
                    }
                ],
                "nosql": [
                    {
                        "id": "data-redis",
                        "name": "Redis",
                        "group": "NoSQL",
                        "description": "Redis key-value data store, including spring-data-redis",
                        "keywords": "redis",
                        "tag": "nosql"
                    },
                    {
                        "id": "data-redis-reactive",
                        "name": "Reactive Redis",
                        "group": "NoSQL",
                        "description": "Redis key-value data store, including spring-data-redis",
                        "tag": "nosql"
                    },
                    {
                        "id": "data-mongodb",
                        "name": "MongoDB",
                        "group": "NoSQL",
                        "description": "MongoDB NoSQL Database, including spring-data-mongodb",
                        "weight": 50,
                        "tag": "nosql"
                    },
                    {
                        "id": "data-mongodb-reactive",
                        "name": "Reactive MongoDB",
                        "group": "NoSQL",
                        "description": "MongoDB NoSQL Database, including spring-data-mongodb and the reactive driver",
                        "weight": 50,
                        "tag": "nosql"
                    },
                    {
                        "id": "flapdoodle-mongo",
                        "name": "Embedded MongoDB",
                        "group": "NoSQL",
                        "description": "Embedded MongoDB for testing",
                        "tag": "nosql"
                    },
                    {
                        "id": "data-elasticsearch",
                        "name": "Elasticsearch",
                        "group": "NoSQL",
                        "description": "Elasticsearch search and analytics engine including spring-data-elasticsearch",
                        "weight": 10,
                        "tag": "nosql"
                    },
                    {
                        "id": "data-solr",
                        "name": "Solr",
                        "group": "NoSQL",
                        "description": "Apache Solr search platform, including spring-data-solr",
                        "tag": "nosql"
                    },
                    {
                        "id": "data-cassandra",
                        "name": "Cassandra",
                        "group": "NoSQL",
                        "description": "Cassandra NoSQL Database, including spring-data-cassandra",
                        "tag": "nosql"
                    },
                    {
                        "id": "data-cassandra-reactive",
                        "name": "Reactive Cassandra",
                        "group": "NoSQL",
                        "description": "Cassandra NoSQL Database, including spring-data-cassandra and the reactive driver",
                        "tag": "nosql"
                    },
                    {
                        "id": "data-couchbase",
                        "name": "Couchbase",
                        "group": "NoSQL",
                        "description": "Couchbase NoSQL database, including spring-data-couchbase",
                        "tag": "nosql"
                    },
                    {
                        "id": "data-couchbase-reactive",
                        "name": "Reactive Couchbase",
                        "group": "NoSQL",
                        "description": "Couchbase NoSQL database, including spring-data-couchbase and the reactive driver",
                        "tag": "nosql"
                    },
                    {
                        "id": "data-neo4j",
                        "name": "Neo4j",
                        "group": "NoSQL",
                        "description": "Neo4j NoSQL graph database, including spring-data-neo4j",
                        "tag": "nosql"
                    }
                ],
                "messaging": [
                    {
                        "id": "amqp",
                        "name": "RabbitMQ",
                        "group": "Messaging",
                        "description": "Advanced Message Queuing Protocol via spring-rabbit",
                        "weight": 100,
                        "keywords": "messaging",
                        "tag": "messaging"
                    },
                    {
                        "id": "kafka",
                        "name": "Kafka",
                        "group": "Messaging",
                        "description": "Kafka messaging support using Spring Kafka",
                        "weight": 100,
                        "keywords": "messaging",
                        "tag": "messaging"
                    },
                    {
                        "id": "activemq",
                        "name": "JMS (ActiveMQ)",
                        "group": "Messaging",
                        "description": "Java Message Service API via Apache ActiveMQ",
                        "tag": "messaging"
                    },
                    {
                        "id": "artemis",
                        "name": "JMS (Artemis)",
                        "group": "Messaging",
                        "description": "Java Message Service API via Apache Artemis",
                        "tag": "messaging"
                    }
                ],
                "cloud core": [
                    {
                        "id": "cloud-connectors",
                        "name": "Cloud Connectors",
                        "group": "Cloud Core",
                        "description": "Simplifies connecting to services in cloud platforms, including spring-cloud-connector and spring-cloud-cloudfoundry-connector",
                        "tag": "cloud core"
                    },
                    {
                        "id": "cloud-starter",
                        "name": "Cloud Bootstrap",
                        "group": "Cloud Core",
                        "description": "spring-cloud-context (e.g. Bootstrap context and @RefreshScope)",
                        "weight": 100,
                        "tag": "cloud core"
                    },
                    {
                        "id": "cloud-security",
                        "name": "Cloud Security",
                        "group": "Cloud Core",
                        "description": "Secure load balancing and routing with spring-cloud-security",
                        "tag": "cloud core"
                    },
                    {
                        "id": "cloud-oauth2",
                        "name": "Cloud OAuth2",
                        "group": "Cloud Core",
                        "description": "OAuth2 and distributed application patterns with spring-cloud-security",
                        "tag": "cloud core"
                    },
                    {
                        "id": "cloud-task",
                        "name": "Cloud Task",
                        "group": "Cloud Core",
                        "description": "Task result tracking and integration with Spring Batch",
                        "tag": "cloud core"
                    }
                ],
                "cloud config": [
                    {
                        "id": "cloud-config-client",
                        "name": "Config Client",
                        "group": "Cloud Config",
                        "description": "spring-cloud-config Client",
                        "weight": 100,
                        "tag": "cloud config"
                    },
                    {
                        "id": "cloud-config-server",
                        "name": "Config Server",
                        "group": "Cloud Config",
                        "description": "Central management for configuration via a git or svn backend",
                        "tag": "cloud config"
                    },
                    {
                        "id": "cloud-starter-vault-config",
                        "name": "Vault Configuration",
                        "group": "Cloud Config",
                        "description": "Configuration management with HashiCorp Vault",
                        "tag": "cloud config"
                    },
                    {
                        "id": "cloud-starter-zookeeper-config",
                        "name": "Zookeeper Configuration",
                        "group": "Cloud Config",
                        "description": "Configuration management with Zookeeper and spring-cloud-zookeeper-config",
                        "tag": "cloud config"
                    },
                    {
                        "id": "cloud-starter-consul-config",
                        "name": "Consul Configuration",
                        "group": "Cloud Config",
                        "description": "Configuration management with Hashicorp Consul",
                        "tag": "cloud config"
                    }
                ],
                "cloud discovery": [
                    {
                        "id": "cloud-eureka",
                        "name": "Eureka Discovery",
                        "group": "Cloud Discovery",
                        "description": "Service discovery using spring-cloud-netflix and Eureka",
                        "weight": 100,
                        "tag": "cloud discovery"
                    },
                    {
                        "id": "cloud-eureka-server",
                        "name": "Eureka Server",
                        "group": "Cloud Discovery",
                        "description": "spring-cloud-netflix Eureka Server",
                        "tag": "cloud discovery"
                    },
                    {
                        "id": "cloud-starter-zookeeper-discovery",
                        "name": "Zookeeper Discovery",
                        "group": "Cloud Discovery",
                        "description": "Service discovery with Zookeeper and spring-cloud-zookeeper-discovery",
                        "tag": "cloud discovery"
                    },
                    {
                        "id": "cloud-cloudfoundry-discovery",
                        "name": "Cloud Foundry Discovery",
                        "group": "Cloud Discovery",
                        "description": "Service discovery with Cloud Foundry",
                        "tag": "cloud discovery"
                    },
                    {
                        "id": "cloud-starter-consul-discovery",
                        "name": "Consul Discovery",
                        "group": "Cloud Discovery",
                        "description": "Service discovery with Hashicorp Consul",
                        "tag": "cloud discovery"
                    }
                ],
                "cloud routing": [
                    {
                        "id": "cloud-zuul",
                        "name": "Zuul",
                        "group": "Cloud Routing",
                        "description": "Intelligent and programmable routing with spring-cloud-netflix Zuul",
                        "tag": "cloud routing"
                    },
                    {
                        "id": "cloud-gateway",
                        "name": "Gateway",
                        "group": "Cloud Routing",
                        "description": "Intelligent and programmable routing with the reactive Spring Cloud Gateway",
                        "tag": "cloud routing"
                    },
                    {
                        "id": "cloud-ribbon",
                        "name": "Ribbon",
                        "group": "Cloud Routing",
                        "description": "Client side load balancing with spring-cloud-netflix and Ribbon",
                        "tag": "cloud routing"
                    },
                    {
                        "id": "cloud-feign",
                        "name": "Feign",
                        "group": "Cloud Routing",
                        "description": "Declarative REST clients with spring-cloud-netflix Feign",
                        "tag": "cloud routing"
                    }
                ],
                "cloud circuit breaker": [
                    {
                        "id": "cloud-hystrix",
                        "name": "Hystrix",
                        "group": "Cloud Circuit Breaker",
                        "description": "Circuit breaker with spring-cloud-netflix Hystrix",
                        "tag": "cloud circuit breaker"
                    },
                    {
                        "id": "cloud-hystrix-dashboard",
                        "name": "Hystrix Dashboard",
                        "group": "Cloud Circuit Breaker",
                        "description": "Circuit breaker dashboard with spring-cloud-netflix Hystrix",
                        "tag": "cloud circuit breaker"
                    },
                    {
                        "id": "cloud-turbine",
                        "name": "Turbine",
                        "group": "Cloud Circuit Breaker",
                        "description": "Circuit breaker metric aggregation using spring-cloud-netflix with Turbine and server-sent events",
                        "tag": "cloud circuit breaker"
                    },
                    {
                        "id": "cloud-turbine-stream",
                        "name": "Turbine Stream",
                        "group": "Cloud Circuit Breaker",
                        "description": "Circuit breaker metric aggregation using spring-cloud-netflix with Turbine and Spring Cloud Stream (requires a binder, e.g. Kafka or RabbitMQ)",
                        "tag": "cloud circuit breaker"
                    }
                ],
                "cloud tracing": [
                    {
                        "id": "cloud-starter-sleuth",
                        "name": "Sleuth",
                        "group": "Cloud Tracing",
                        "description": "Distributed tracing via logs with spring-cloud-sleuth",
                        "tag": "cloud tracing"
                    },
                    {
                        "id": "cloud-starter-zipkin",
                        "name": "Zipkin Client",
                        "group": "Cloud Tracing",
                        "description": "Distributed tracing with an existing Zipkin installation and spring-cloud-sleuth-zipkin. Alternatively, consider Sleuth Stream.",
                        "tag": "cloud tracing"
                    }
                ],
                "cloud messaging": [
                    {
                        "id": "cloud-bus",
                        "name": "Cloud Bus",
                        "group": "Cloud Messaging",
                        "description": "A simple control bus using Spring Cloud Stream (requires a binder, e.g. Kafka or RabbitMQ)",
                        "tag": "cloud messaging"
                    },
                    {
                        "id": "cloud-stream",
                        "name": "Cloud Stream",
                        "group": "Cloud Messaging",
                        "description": "Messaging microservices with Spring Cloud Stream (requires a binder, e.g. Kafka or RabbitMQ)",
                        "weight": 90,
                        "tag": "cloud messaging"
                    },
                    {
                        "id": "reactive-cloud-stream",
                        "name": "Reactive Cloud Stream",
                        "group": "Cloud Messaging",
                        "description": "Reactive messaging microservices with Spring Cloud Stream (requires a binder, e.g. Kafka or RabbitMQ)",
                        "weight": 90,
                        "tag": "cloud messaging"
                    }
                ],
                "cloud aws": [
                    {
                        "id": "cloud-aws",
                        "name": "AWS Core",
                        "group": "Cloud AWS",
                        "description": "AWS native services from spring-cloud-aws",
                        "tag": "cloud aws"
                    },
                    {
                        "id": "cloud-aws-jdbc",
                        "name": "AWS JDBC",
                        "group": "Cloud AWS",
                        "description": "Relational databases on AWS with RDS and spring-cloud-aws-jdbc",
                        "tag": "cloud aws"
                    },
                    {
                        "id": "cloud-aws-messaging",
                        "name": "AWS Messaging",
                        "group": "Cloud AWS",
                        "description": "Messaging on AWS with SQS and spring-cloud-aws-messaging",
                        "tag": "cloud aws"
                    }
                ],
                "cloud contract": [
                    {
                        "id": "cloud-contract-verifier",
                        "name": "Cloud Contract Verifier",
                        "group": "Cloud Contract",
                        "description": "Test dependencies required for autogenerated tests",
                        "tag": "cloud contract"
                    },
                    {
                        "id": "cloud-contract-stub-runner",
                        "name": "Cloud Contract Stub Runner",
                        "group": "Cloud Contract",
                        "description": "Stub Runner for HTTP/Messaging based communication",
                        "tag": "cloud contract"
                    },
                    {
                        "id": "cloud-contract-wiremock",
                        "name": "Cloud Contract WireMock",
                        "group": "Cloud Contract",
                        "description": "Test dependencies required for the WireMock HTTP server",
                        "tag": "cloud contract"
                    }
                ],
                "i/o": [
                    {
                        "id": "batch",
                        "name": "Batch",
                        "group": "I/O",
                        "description": "Spring Batch support",
                        "weight": 100,
                        "tag": "i/o"
                    },
                    {
                        "id": "integration",
                        "name": "Integration",
                        "group": "I/O",
                        "description": "Common spring-integration modules",
                        "weight": 100,
                        "tag": "i/o"
                    },
                    {
                        "id": "mail",
                        "name": "Mail",
                        "group": "I/O",
                        "description": "javax.mail",
                        "tag": "i/o"
                    },
                    {
                        "id": "data-ldap",
                        "name": "LDAP",
                        "group": "I/O",
                        "description": "LDAP support, including spring-data-ldap",
                        "tag": "i/o"
                    },
                    {
                        "id": "quartz",
                        "name": "Quartz Scheduler",
                        "group": "I/O",
                        "description": "Schedule jobs using Quartz",
                        "tag": "i/o"
                    },
                    {
                        "id": "spring-shell",
                        "name": "Spring Shell",
                        "group": "I/O",
                        "description": "Build shell-based clients",
                        "tag": "i/o"
                    },
                    {
                        "id": "statemachine",
                        "name": "Statemachine",
                        "group": "I/O",
                        "description": "Build applications using state machine concepts",
                        "tag": "i/o"
                    }
                ],
                "ops": [
                    {
                        "id": "actuator",
                        "name": "Actuator",
                        "group": "Ops",
                        "description": "Production ready features to help you monitor and manage your application",
                        "tag": "ops"
                    }
                ]
            }
        },
        {
            "2.0.0.RC1": {
                "core": [
                    {
                        "id": "devtools",
                        "name": "DevTools",
                        "group": "Core",
                        "description": "Spring Boot Development Tools",
                        "tag": "core"
                    },
                    {
                        "id": "security",
                        "name": "Security",
                        "group": "Core",
                        "description": "Secure your application via spring-security",
                        "weight": 100,
                        "tag": "core"
                    },
                    {
                        "id": "lombok",
                        "name": "Lombok",
                        "group": "Core",
                        "description": "Java annotation library which helps to reduce boilerplate code and code faster",
                        "tag": "core"
                    },
                    {
                        "id": "configuration-processor",
                        "name": "Configuration Processor",
                        "group": "Core",
                        "description": "Generate metadata for your custom configuration keys",
                        "tag": "core"
                    },
                    {
                        "id": "session",
                        "name": "Session",
                        "group": "Core",
                        "description": "API and implementations for managing a user\u2019s session information",
                        "tag": "core"
                    },
                    {
                        "id": "cache",
                        "name": "Cache",
                        "group": "Core",
                        "description": "Spring's Cache abstraction",
                        "tag": "core"
                    },
                    {
                        "id": "validation",
                        "name": "Validation",
                        "group": "Core",
                        "description": "JSR-303 validation infrastructure (already included with web)",
                        "tag": "core"
                    },
                    {
                        "id": "retry",
                        "name": "Retry",
                        "group": "Core",
                        "description": "Provide declarative retry support via spring-retry",
                        "tag": "core"
                    },
                    {
                        "id": "jta-atomikos",
                        "name": "JTA (Atomikos)",
                        "group": "Core",
                        "description": "JTA distributed transactions via Atomikos",
                        "tag": "core"
                    },
                    {
                        "id": "jta-bitronix",
                        "name": "JTA (Bitronix)",
                        "group": "Core",
                        "description": "JTA distributed transactions via Bitronix",
                        "tag": "core"
                    },
                    {
                        "id": "jta-narayana",
                        "name": "JTA (Narayana)",
                        "group": "Core",
                        "description": "JTA distributed transactions via Narayana",
                        "tag": "core"
                    },
                    {
                        "id": "aop",
                        "name": "Aspects",
                        "group": "Core",
                        "description": "Create your own Aspects using Spring AOP and AspectJ",
                        "tag": "core"
                    }
                ],
                "web": [
                    {
                        "id": "web",
                        "name": "Web",
                        "group": "Web",
                        "description": "Full-stack web development with Tomcat and Spring MVC",
                        "weight": 100,
                        "tag": "web"
                    },
                    {
                        "id": "webflux",
                        "name": "Reactive Web",
                        "group": "Web",
                        "description": "Reactive web development with Netty and Spring WebFlux",
                        "weight": 90,
                        "tag": "web"
                    },
                    {
                        "id": "data-rest",
                        "name": "Rest Repositories",
                        "group": "Web",
                        "description": "Exposing Spring Data repositories over REST via spring-data-rest-webmvc",
                        "weight": 10,
                        "tag": "web"
                    },
                    {
                        "id": "data-rest-hal",
                        "name": "Rest Repositories HAL Browser",
                        "group": "Web",
                        "description": "Browsing Spring Data REST repositories in your browser",
                        "tag": "web"
                    },
                    {
                        "id": "hateoas",
                        "name": "HATEOAS",
                        "group": "Web",
                        "description": "HATEOAS-based RESTful services",
                        "tag": "web"
                    },
                    {
                        "id": "web-services",
                        "name": "Web Services",
                        "group": "Web",
                        "description": "Contract-first SOAP service development with Spring Web Services",
                        "keywords": "ws",
                        "tag": "web"
                    },
                    {
                        "id": "jersey",
                        "name": "Jersey (JAX-RS)",
                        "group": "Web",
                        "description": "RESTful Web Services framework with support of JAX-RS",
                        "tag": "web"
                    },
                    {
                        "id": "websocket",
                        "name": "Websocket",
                        "group": "Web",
                        "description": "Websocket development with SockJS and STOMP",
                        "tag": "web"
                    },
                    {
                        "id": "restdocs",
                        "name": "REST Docs",
                        "group": "Web",
                        "description": "Document RESTful services by combining hand-written and auto-generated documentation",
                        "tag": "web"
                    },
                    {
                        "id": "vaadin",
                        "name": "Vaadin",
                        "group": "Web",
                        "description": "Vaadin java web application framework",
                        "tag": "web"
                    }
                ],
                "template engines": [
                    {
                        "id": "thymeleaf",
                        "name": "Thymeleaf",
                        "group": "Template Engines",
                        "description": "Thymeleaf templating engine, including integration with Spring",
                        "weight": 90,
                        "keywords": "template",
                        "tag": "template engines"
                    },
                    {
                        "id": "freemarker",
                        "name": "Freemarker",
                        "group": "Template Engines",
                        "description": "FreeMarker templating engine",
                        "keywords": "template",
                        "tag": "template engines"
                    },
                    {
                        "id": "mustache",
                        "name": "Mustache",
                        "group": "Template Engines",
                        "description": "Mustache templating engine",
                        "keywords": "template",
                        "tag": "template engines"
                    },
                    {
                        "id": "groovy-templates",
                        "name": "Groovy Templates",
                        "group": "Template Engines",
                        "description": "Groovy templating engine",
                        "tag": "template engines"
                    }
                ],
                "sql": [
                    {
                        "id": "data-jpa",
                        "name": "JPA",
                        "group": "SQL",
                        "description": "Java Persistence API including spring-data-jpa, spring-orm and Hibernate",
                        "weight": 100,
                        "keywords": "jpa",
                        "tag": "sql"
                    },
                    {
                        "id": "mysql",
                        "name": "MySQL",
                        "group": "SQL",
                        "description": "MySQL jdbc driver",
                        "tag": "sql"
                    },
                    {
                        "id": "h2",
                        "name": "H2",
                        "group": "SQL",
                        "description": "H2 database (with embedded support)",
                        "tag": "sql"
                    },
                    {
                        "id": "jdbc",
                        "name": "JDBC",
                        "group": "SQL",
                        "description": "JDBC databases",
                        "tag": "sql"
                    },
                    {
                        "id": "mybatis",
                        "name": "MyBatis",
                        "group": "SQL",
                        "description": "Persistence support using MyBatis",
                        "tag": "sql"
                    },
                    {
                        "id": "postgresql",
                        "name": "PostgreSQL",
                        "group": "SQL",
                        "description": "PostgreSQL jdbc driver",
                        "tag": "sql"
                    },
                    {
                        "id": "sqlserver",
                        "name": "SQL Server",
                        "group": "SQL",
                        "description": "Microsoft SQL Server jdbc driver",
                        "tag": "sql"
                    },
                    {
                        "id": "hsql",
                        "name": "HSQLDB",
                        "group": "SQL",
                        "description": "HSQLDB database (with embedded support)",
                        "tag": "sql"
                    },
                    {
                        "id": "derby",
                        "name": "Apache Derby",
                        "group": "SQL",
                        "description": "Apache Derby database (with embedded support)",
                        "tag": "sql"
                    },
                    {
                        "id": "liquibase",
                        "name": "Liquibase",
                        "group": "SQL",
                        "description": "Liquibase Database Migrations library",
                        "tag": "sql"
                    },
                    {
                        "id": "flyway",
                        "name": "Flyway",
                        "group": "SQL",
                        "description": "Flyway Database Migrations library",
                        "tag": "sql"
                    },
                    {
                        "id": "jooq",
                        "name": "JOOQ",
                        "group": "SQL",
                        "description": "Persistence support using Java Object Oriented Querying",
                        "tag": "sql"
                    }
                ],
                "nosql": [
                    {
                        "id": "data-redis",
                        "name": "Redis",
                        "group": "NoSQL",
                        "description": "Redis key-value data store, including spring-data-redis",
                        "keywords": "redis",
                        "tag": "nosql"
                    },
                    {
                        "id": "data-redis-reactive",
                        "name": "Reactive Redis",
                        "group": "NoSQL",
                        "description": "Redis key-value data store, including spring-data-redis",
                        "tag": "nosql"
                    },
                    {
                        "id": "data-mongodb",
                        "name": "MongoDB",
                        "group": "NoSQL",
                        "description": "MongoDB NoSQL Database, including spring-data-mongodb",
                        "weight": 50,
                        "tag": "nosql"
                    },
                    {
                        "id": "data-mongodb-reactive",
                        "name": "Reactive MongoDB",
                        "group": "NoSQL",
                        "description": "MongoDB NoSQL Database, including spring-data-mongodb and the reactive driver",
                        "weight": 50,
                        "tag": "nosql"
                    },
                    {
                        "id": "flapdoodle-mongo",
                        "name": "Embedded MongoDB",
                        "group": "NoSQL",
                        "description": "Embedded MongoDB for testing",
                        "tag": "nosql"
                    },
                    {
                        "id": "data-elasticsearch",
                        "name": "Elasticsearch",
                        "group": "NoSQL",
                        "description": "Elasticsearch search and analytics engine including spring-data-elasticsearch",
                        "weight": 10,
                        "tag": "nosql"
                    },
                    {
                        "id": "data-solr",
                        "name": "Solr",
                        "group": "NoSQL",
                        "description": "Apache Solr search platform, including spring-data-solr",
                        "tag": "nosql"
                    },
                    {
                        "id": "data-cassandra",
                        "name": "Cassandra",
                        "group": "NoSQL",
                        "description": "Cassandra NoSQL Database, including spring-data-cassandra",
                        "tag": "nosql"
                    },
                    {
                        "id": "data-cassandra-reactive",
                        "name": "Reactive Cassandra",
                        "group": "NoSQL",
                        "description": "Cassandra NoSQL Database, including spring-data-cassandra and the reactive driver",
                        "tag": "nosql"
                    },
                    {
                        "id": "data-couchbase",
                        "name": "Couchbase",
                        "group": "NoSQL",
                        "description": "Couchbase NoSQL database, including spring-data-couchbase",
                        "tag": "nosql"
                    },
                    {
                        "id": "data-couchbase-reactive",
                        "name": "Reactive Couchbase",
                        "group": "NoSQL",
                        "description": "Couchbase NoSQL database, including spring-data-couchbase and the reactive driver",
                        "tag": "nosql"
                    },
                    {
                        "id": "data-neo4j",
                        "name": "Neo4j",
                        "group": "NoSQL",
                        "description": "Neo4j NoSQL graph database, including spring-data-neo4j",
                        "tag": "nosql"
                    }
                ],
                "messaging": [
                    {
                        "id": "amqp",
                        "name": "RabbitMQ",
                        "group": "Messaging",
                        "description": "Advanced Message Queuing Protocol via spring-rabbit",
                        "weight": 100,
                        "keywords": "messaging",
                        "tag": "messaging"
                    },
                    {
                        "id": "kafka",
                        "name": "Kafka",
                        "group": "Messaging",
                        "description": "Kafka messaging support using Spring Kafka",
                        "weight": 100,
                        "keywords": "messaging",
                        "tag": "messaging"
                    },
                    {
                        "id": "activemq",
                        "name": "JMS (ActiveMQ)",
                        "group": "Messaging",
                        "description": "Java Message Service API via Apache ActiveMQ",
                        "tag": "messaging"
                    },
                    {
                        "id": "artemis",
                        "name": "JMS (Artemis)",
                        "group": "Messaging",
                        "description": "Java Message Service API via Apache Artemis",
                        "tag": "messaging"
                    }
                ],
                "cloud core": [
                    {
                        "id": "cloud-connectors",
                        "name": "Cloud Connectors",
                        "group": "Cloud Core",
                        "description": "Simplifies connecting to services in cloud platforms, including spring-cloud-connector and spring-cloud-cloudfoundry-connector",
                        "tag": "cloud core"
                    },
                    {
                        "id": "cloud-starter",
                        "name": "Cloud Bootstrap",
                        "group": "Cloud Core",
                        "description": "spring-cloud-context (e.g. Bootstrap context and @RefreshScope)",
                        "weight": 100,
                        "tag": "cloud core"
                    },
                    {
                        "id": "cloud-security",
                        "name": "Cloud Security",
                        "group": "Cloud Core",
                        "description": "Secure load balancing and routing with spring-cloud-security",
                        "tag": "cloud core"
                    },
                    {
                        "id": "cloud-oauth2",
                        "name": "Cloud OAuth2",
                        "group": "Cloud Core",
                        "description": "OAuth2 and distributed application patterns with spring-cloud-security",
                        "tag": "cloud core"
                    },
                    {
                        "id": "cloud-task",
                        "name": "Cloud Task",
                        "group": "Cloud Core",
                        "description": "Task result tracking and integration with Spring Batch",
                        "tag": "cloud core"
                    }
                ],
                "cloud config": [
                    {
                        "id": "cloud-config-client",
                        "name": "Config Client",
                        "group": "Cloud Config",
                        "description": "spring-cloud-config Client",
                        "weight": 100,
                        "tag": "cloud config"
                    },
                    {
                        "id": "cloud-config-server",
                        "name": "Config Server",
                        "group": "Cloud Config",
                        "description": "Central management for configuration via a git or svn backend",
                        "tag": "cloud config"
                    },
                    {
                        "id": "cloud-starter-vault-config",
                        "name": "Vault Configuration",
                        "group": "Cloud Config",
                        "description": "Configuration management with HashiCorp Vault",
                        "tag": "cloud config"
                    },
                    {
                        "id": "cloud-starter-zookeeper-config",
                        "name": "Zookeeper Configuration",
                        "group": "Cloud Config",
                        "description": "Configuration management with Zookeeper and spring-cloud-zookeeper-config",
                        "tag": "cloud config"
                    },
                    {
                        "id": "cloud-starter-consul-config",
                        "name": "Consul Configuration",
                        "group": "Cloud Config",
                        "description": "Configuration management with Hashicorp Consul",
                        "tag": "cloud config"
                    }
                ],
                "cloud discovery": [
                    {
                        "id": "cloud-eureka",
                        "name": "Eureka Discovery",
                        "group": "Cloud Discovery",
                        "description": "Service discovery using spring-cloud-netflix and Eureka",
                        "weight": 100,
                        "tag": "cloud discovery"
                    },
                    {
                        "id": "cloud-eureka-server",
                        "name": "Eureka Server",
                        "group": "Cloud Discovery",
                        "description": "spring-cloud-netflix Eureka Server",
                        "tag": "cloud discovery"
                    },
                    {
                        "id": "cloud-starter-zookeeper-discovery",
                        "name": "Zookeeper Discovery",
                        "group": "Cloud Discovery",
                        "description": "Service discovery with Zookeeper and spring-cloud-zookeeper-discovery",
                        "tag": "cloud discovery"
                    },
                    {
                        "id": "cloud-cloudfoundry-discovery",
                        "name": "Cloud Foundry Discovery",
                        "group": "Cloud Discovery",
                        "description": "Service discovery with Cloud Foundry",
                        "tag": "cloud discovery"
                    },
                    {
                        "id": "cloud-starter-consul-discovery",
                        "name": "Consul Discovery",
                        "group": "Cloud Discovery",
                        "description": "Service discovery with Hashicorp Consul",
                        "tag": "cloud discovery"
                    }
                ],
                "cloud routing": [
                    {
                        "id": "cloud-zuul",
                        "name": "Zuul",
                        "group": "Cloud Routing",
                        "description": "Intelligent and programmable routing with spring-cloud-netflix Zuul",
                        "tag": "cloud routing"
                    },
                    {
                        "id": "cloud-gateway",
                        "name": "Gateway",
                        "group": "Cloud Routing",
                        "description": "Intelligent and programmable routing with the reactive Spring Cloud Gateway",
                        "tag": "cloud routing"
                    },
                    {
                        "id": "cloud-ribbon",
                        "name": "Ribbon",
                        "group": "Cloud Routing",
                        "description": "Client side load balancing with spring-cloud-netflix and Ribbon",
                        "tag": "cloud routing"
                    },
                    {
                        "id": "cloud-feign",
                        "name": "Feign",
                        "group": "Cloud Routing",
                        "description": "Declarative REST clients with spring-cloud-netflix Feign",
                        "tag": "cloud routing"
                    }
                ],
                "cloud circuit breaker": [
                    {
                        "id": "cloud-hystrix",
                        "name": "Hystrix",
                        "group": "Cloud Circuit Breaker",
                        "description": "Circuit breaker with spring-cloud-netflix Hystrix",
                        "tag": "cloud circuit breaker"
                    },
                    {
                        "id": "cloud-hystrix-dashboard",
                        "name": "Hystrix Dashboard",
                        "group": "Cloud Circuit Breaker",
                        "description": "Circuit breaker dashboard with spring-cloud-netflix Hystrix",
                        "tag": "cloud circuit breaker"
                    },
                    {
                        "id": "cloud-turbine",
                        "name": "Turbine",
                        "group": "Cloud Circuit Breaker",
                        "description": "Circuit breaker metric aggregation using spring-cloud-netflix with Turbine and server-sent events",
                        "tag": "cloud circuit breaker"
                    },
                    {
                        "id": "cloud-turbine-stream",
                        "name": "Turbine Stream",
                        "group": "Cloud Circuit Breaker",
                        "description": "Circuit breaker metric aggregation using spring-cloud-netflix with Turbine and Spring Cloud Stream (requires a binder, e.g. Kafka or RabbitMQ)",
                        "tag": "cloud circuit breaker"
                    }
                ],
                "cloud tracing": [
                    {
                        "id": "cloud-starter-sleuth",
                        "name": "Sleuth",
                        "group": "Cloud Tracing",
                        "description": "Distributed tracing via logs with spring-cloud-sleuth",
                        "tag": "cloud tracing"
                    },
                    {
                        "id": "cloud-starter-zipkin",
                        "name": "Zipkin Client",
                        "group": "Cloud Tracing",
                        "description": "Distributed tracing with an existing Zipkin installation and spring-cloud-sleuth-zipkin. Alternatively, consider Sleuth Stream.",
                        "tag": "cloud tracing"
                    }
                ],
                "cloud messaging": [
                    {
                        "id": "cloud-bus",
                        "name": "Cloud Bus",
                        "group": "Cloud Messaging",
                        "description": "A simple control bus using Spring Cloud Stream (requires a binder, e.g. Kafka or RabbitMQ)",
                        "tag": "cloud messaging"
                    },
                    {
                        "id": "cloud-stream",
                        "name": "Cloud Stream",
                        "group": "Cloud Messaging",
                        "description": "Messaging microservices with Spring Cloud Stream (requires a binder, e.g. Kafka or RabbitMQ)",
                        "weight": 90,
                        "tag": "cloud messaging"
                    }
                ],
                "cloud aws": [
                    {
                        "id": "cloud-aws",
                        "name": "AWS Core",
                        "group": "Cloud AWS",
                        "description": "AWS native services from spring-cloud-aws",
                        "tag": "cloud aws"
                    },
                    {
                        "id": "cloud-aws-jdbc",
                        "name": "AWS JDBC",
                        "group": "Cloud AWS",
                        "description": "Relational databases on AWS with RDS and spring-cloud-aws-jdbc",
                        "tag": "cloud aws"
                    },
                    {
                        "id": "cloud-aws-messaging",
                        "name": "AWS Messaging",
                        "group": "Cloud AWS",
                        "description": "Messaging on AWS with SQS and spring-cloud-aws-messaging",
                        "tag": "cloud aws"
                    }
                ],
                "cloud contract": [
                    {
                        "id": "cloud-contract-verifier",
                        "name": "Cloud Contract Verifier",
                        "group": "Cloud Contract",
                        "description": "Test dependencies required for autogenerated tests",
                        "tag": "cloud contract"
                    },
                    {
                        "id": "cloud-contract-stub-runner",
                        "name": "Cloud Contract Stub Runner",
                        "group": "Cloud Contract",
                        "description": "Stub Runner for HTTP/Messaging based communication",
                        "tag": "cloud contract"
                    },
                    {
                        "id": "cloud-contract-wiremock",
                        "name": "Cloud Contract WireMock",
                        "group": "Cloud Contract",
                        "description": "Test dependencies required for the WireMock HTTP server",
                        "tag": "cloud contract"
                    }
                ],
                "i/o": [
                    {
                        "id": "batch",
                        "name": "Batch",
                        "group": "I/O",
                        "description": "Spring Batch support",
                        "weight": 100,
                        "tag": "i/o"
                    },
                    {
                        "id": "integration",
                        "name": "Integration",
                        "group": "I/O",
                        "description": "Common spring-integration modules",
                        "weight": 100,
                        "tag": "i/o"
                    },
                    {
                        "id": "mail",
                        "name": "Mail",
                        "group": "I/O",
                        "description": "javax.mail",
                        "tag": "i/o"
                    },
                    {
                        "id": "data-ldap",
                        "name": "LDAP",
                        "group": "I/O",
                        "description": "LDAP support, including spring-data-ldap",
                        "tag": "i/o"
                    },
                    {
                        "id": "quartz",
                        "name": "Quartz Scheduler",
                        "group": "I/O",
                        "description": "Schedule jobs using Quartz",
                        "tag": "i/o"
                    },
                    {
                        "id": "spring-shell",
                        "name": "Spring Shell",
                        "group": "I/O",
                        "description": "Build shell-based clients",
                        "tag": "i/o"
                    },
                    {
                        "id": "statemachine",
                        "name": "Statemachine",
                        "group": "I/O",
                        "description": "Build applications using state machine concepts",
                        "tag": "i/o"
                    }
                ],
                "ops": [
                    {
                        "id": "actuator",
                        "name": "Actuator",
                        "group": "Ops",
                        "description": "Production ready features to help you monitor and manage your application",
                        "tag": "ops"
                    }
                ]
            }
        }
    ]
}
